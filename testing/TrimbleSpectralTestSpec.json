{
    "openapi": "3.0.1",
    "info": {
        "title": "Trimble AG API Developer Guide",
        "summary": "Test Summary",
        "description": "This collection of APIs allows a third-party software developer (“you”) to send data to and receive data from the Trimble Ag cloud application. This will allow your customers to access data generated by Trimble field displays in your application and for your application to send data for use on those displays.",
        "version": "v1",
        "x-logo": {
            "url": "https://tst-agdeveloper.trimbleag.team/wp-content/uploads/TrimbleAgriculture_noTagLine-2.png",
            "altText": "Trimble Agriculture"
        },
        "contact": {
            "name": "",
            "email": "",
            "url": ""
        }
    },
    "x-tagGroups": [
        {
            "name": " ",
            "tags": [
                "introduction",
                "API Credentials"
            ]
        },
        {
            "name": "Authentication and Authorization",
            "tags": [
                "authentication",
                "authorization",
                "Organizations"
            ]
        },
        {
            "name": "Resources",
            "tags": [
                "resources-overview",
                "Clients",
                "Farms",
                "Fields",
                "Boundaries",
                "FieldExtents",
                "GuidanceLines",
                "Landmarks"
            ]
        },
        {
            "name": "Devices",
            "tags": [
                "devices-overview",
                "Devices"
            ]
        },
        {
            "name": "Prescriptions",
            "tags": [
                "prescriptions-overview",
                "Prescriptions"
            ]
        },
        {
            "name": "Tasks",
            "tags": [
                "jobdata-overview",
                "EquipmentActivity",
                "Files"
            ]
        },
        {
            "name": "ADAPT",
            "tags": [
                "adapt-introduction",
                "AdaptToken",
                "The ADAPT Data Model",
                "Getting Started",
                "Trimble ADAPT Plugins"
            ]
        }
    ],
    "tags": [
        {
            "name": "introduction",
            "x-displayName": "Introduction",
            "description": "<div class=\"overview\">\n  This document will help you get started using the Trimble APIs. This section gives an overview of the Trimble Ag APIs and how they are used.\n</div>\n\n  * **Definitions of {{variables}}:**  \n    **TID - Trimble Identity {{Env Auth root}}:**  \n    **Production Authentication -** https://id.trimble.com  \n    **Staging Authentication** - https://id.trimble.com  \n  \n    **{{yourAppName}}:** the application name assigned to your integration** **  \n    **{{yourClientId}}:** the GUID assigned to your integration  \n    **{{authenticationCallbackUrl}}:** the url to return to your application from oAuth login at TID (must be an exact match to a URL in the list of valid authenticationCallbackURLs you provide)  \n    **{{yourLogoutUrl}}: (optional)** the url to return to your application from logout at TID (if used must be an exact match to a URL in the list of valid logoutURLs you provide)  \n    **{{authorizationRedirectUrl}}:** The URL that users should be returned to after Authorizing organizations for data access in trimbleag.com (must be an exact match to a URL in the list of valid authorizationRedirect URLs you provide)  \n    **{{authProvider}}:** the returned value of which authentication provider was used  \n    **{{TIDAuthCode}}:** the code generated by the TID system that you can exchange for an access, refresh and id token from TID.  This code is good for 1 use and expires after 10 mins.  \n    **{{AccessToken}}:** the JWT token with a 1 hour expiration that is used to call Data endpoints  \n    **{{IdToken}}:** the JWT token with additional information about the user who was authenticated in TID  \n    **{{RefreshToken}}:** the token with a 7 day expiration that can be exchanged for a new access token  \n  \n    **Trimble Ag API {{Env Data root}}:**  \n    **Production Data** - https://cloud.api.trimble.com/Trimble-Ag-Software/externalApi  \n    **Staging Data** - https://cloud.api.trimble.com/Trimble-Ag-Software/externalApi-stg<figure class=\"wp-block-image size-full\">\n\n<img src=\"https://tst-agdeveloper.trimbleag.team/wp-content/uploads/Screenshot-2022-02-22-at-08-39-39-Trimble-Ag-API-Developer-Guide-v3.5-Transition-to-Auto-Documentation.png\" alt=\"\" class=\"wp-image-2485\" /> </figure> \n\nTo exchange data using the Connected Farm APIs, do the following:\n\n  * Obtain your API credentials from your Trimble contact. This will include your “ClientId, Secret and ApplicationName” to be used in the “Authentication Token API” referenced below under Authorization/Authentication.&nbsp; You will need to provide a logo to be displayed on the authorization page and a return URL for users to come back to your application after the authorization process. Logo dimensions should be 140 px by 140 px.\n  * Your customers must have a Trimble Ag account (created at [www.TrimbleAg.com][1]). Each user account will have access to one or more organizations. An organization is the basic structure that segregates user data. An organization typically represents the business entity that manages the resources (fields, equipment, personel, materials) used in a farming operation.\n  * Your users must approve your application to access their data within [www.TrimbleAg.com][1] either via an OAuth process you initiate or directly via [www.TrimbleAg.com][1]&nbsp;\n  * To allow your application to access your customer’s Connected Farm data, you must do the following:\n      * Obtain an access token&nbsp;\n      * Once the client application has an access token, you will use the the other Trimble Ag API endpoints.\n\n [1]: http://www.trimbleag.com"
        },
        {
            "name": "API Credentials",
            "x-displayName": "API Credentials",
            "description": "<div class=\"overview\">\n  To create your API credentials we need the items below. Please respond to this email with these items. For more information on these see the \"Introduction\" section of the <em>Trimble Ag API Developer Guide</em>.\n</div>\n\n  * Company logo to be displayed on the authorization page. Logo dimensions should be 140 px by 140 px.\n\n  * **Authentication Callback URLs:** the URL to return to your application from oAuth login at TID\n  * **Logout URL** (OPTIONAL) - the URL to return to your application from logout at TID\n  * **Authorization RedirectURLs:** The URL that users should be returned to after Authorizing organizations for data access in [trimbleag.com][1]\n\nAfter we receive the above items we will create and send the API credential values below.\n\n  * ClientId\n  * ClientSecret\n  * AppName\n\n [1]: http://trimbleag.com/"
        },
        {
            "name": "authentication",
            "x-displayName": "Authentication",
            "description": "<div class=\"overview\">\n  In order for your application to access data within an Organization, the Trimble user must approve your application in an Authorization step, but in order to discover if a user has authorized your application you need to go through an oAuth process to gain access to the data that is scoped to that user.<br /><br />These flow diagrams illustrate how you can use the APIs to allow third-party software to send data to and receive data from the Connected Farm software.<br /><br /><strong>Authorization / authentication API data flow diagram</strong>:<br /><br /><img src=\"https://tst-agdeveloper.trimbleag.team/wp-content/uploads/Screenshot-2022-02-22-at-08-39-58-Trimble-Ag-API-Developer-Guide-v3.5-Transition-to-Auto-Documentation.png\" alt=\"\" />\n</div>\n\n## User Authorization Code\n\nThe first step of the oAuth process is to send the user to log into Trimble’s identity management system in order to obtain an authorization code. This code will be valid for 10 minutes.\n\n### URL\n\n<pre class=\"wp-block-preformatted\">{{Env Auth root}}/oauth/authorize?scope={{yourAppName}} openid&response_type=code&redirect_uri={{authenticationCallbackUrl}}&client_id={{yourClientId}}</pre>\n\nAfter the user logs into TID they will be returned to your application via the following URL:\n\n<pre class=\"wp-block-preformatted\">{{authenticationCallbackUrl}}?code={{TIDAuthCode}}&identity_provider={{authProvider}}</pre>\n\n## Authentication Token API\n\nUse this method from a third-party client application or web service to obtain an access token to use for subsequent method calls as described in Common authentication token. It also returns an id and refresh token for identification and re-authentication after the access token expires. The authentication token is valid for 1 hour and the refresh token is valid for 9 days. The refresh token is a single use token that becomes invalid after use.\n\n### URL\n\n<pre class=\"wp-block-preformatted\">POST {{Env Auth root}}/oauth/token</pre>\n\n### Header Values\n\nThe web service expects you to post a URL Form Encoded string in the body, containing the following fields:<figure class=\"wp-block-table\">\n\n<table><tr>\n  <th>\n    Attribute\n  </th>\n  \n  <th>\n    Description\n  </th>\n  \n  <th>\n    Values\n  </th>\n  \n  <th class=\"has-text-align-center\" data-align=\"center\">\n    Required\n  </th>\n</tr>\n\n<tr>\n  <td>\n    Authorization\n  </td>\n  \n  <td>\n    Basic Auth using Base64 encoded value of provided ClientID:ClientSecret\n  </td>\n  \n  <td>\n    Basic {Encoded value goes here}\n  </td>\n  \n  <td class=\"has-text-align-center\" data-align=\"center\">\n    Y\n  </td>\n</tr>\n\n<tr>\n  <td>\n    Content-Type\n  </td>\n  \n  <td>\n    Specifies the request content type\n  </td>\n  \n  <td>\n    application/x-www-form-urlencoded\n  </td>\n  \n  <td class=\"has-text-align-center\" data-align=\"center\">\n    Y\n  </td>\n</tr></table></figure> \n\n### Body Values\n\nThe web service expects you to post a URL Form Encoded string in the body, containing the following fields:<figure class=\"wp-block-table\">\n\n<table><tr>\n  <th>\n    Attribute\n  </th>\n  \n  <th>\n    Description\n  </th>\n  \n  <th>\n    Values\n  </th>\n  \n  <th class=\"has-text-align-center\" data-align=\"center\">\n    Required\n  </th>\n</tr>\n\n<tr>\n  <td>\n    grant_type\n  </td>\n  \n  <td>\n    Required value to identify authentication type\n  </td>\n  \n  <td>\n    authorization_code\n  </td>\n  \n  <td class=\"has-text-align-center\" data-align=\"center\">\n    Y\n  </td>\n</tr>\n\n<tr>\n  <td>\n    code\n  </td>\n  \n  <td>\n    The authorization code returned from the oAuth process\n  </td>\n  \n  <td>\n    {{TIDAuthCode}}\n  </td>\n  \n  <td class=\"has-text-align-center\" data-align=\"center\">\n    Y\n  </td>\n</tr>\n\n<tr>\n  <td>\n    client_id\n  </td>\n  \n  <td>\n    The GUID provided to you\n  </td>\n  \n  <td>\n    {{yourClientId}}\n  </td>\n  \n  <td class=\"has-text-align-center\" data-align=\"center\">\n    Y\n  </td>\n</tr>\n\n<tr>\n  <td>\n    redirect_uri\n  </td>\n  \n  <td>\n    An exact match to one of the urls provided to us by you to return to your app after log in.\n  </td>\n  \n  <td>\n    {{authenticationCallbackUrl}}\n  </td>\n  \n  <td class=\"has-text-align-center\" data-align=\"center\">\n    Y\n  </td>\n</tr></table></figure> \n\n### Input example\n\nThe following is an example of the parameters to help illustrate the definition. The string of characters after the word Basic would be the result of base 64 encoding MyProvidedClientId:MyClientSecret which you would replace with your own values.\n\n<pre class=\"wp-block-preformatted\">POST: https://id.trimble.com/oauth/token\nContent-Type: application/x-www-form-urlencoded\nAuthorization: Basic TXlQcm….\ngrant_type=authorization_code&code=sd3ds…&client_id=e3rdfF…&redirect_uri=https://mydomain.com/oauthreturn</pre>\n\n### Response\n\nThe service acknowledges with http code 200 for success (OK) and any other http code for failure.\n\nIn addition to the 200 http code, the web service responds with a JSON formatted document with the following fields to provide either confirmation of the receipt or an error:<figure class=\"wp-block-table\">\n\n<table><tr>\n  <td>\n    <strong>Attribute</strong>\n  </td>\n  \n  <td>\n    <strong>Description</strong>\n  </td>\n  \n  <td>\n    <strong>Values</strong>\n  </td>\n</tr>\n\n<tr>\n  <td>\n    access_token\n  </td>\n  \n  <td>\n    The security token that needs to be used on subsequent requests\n  </td>\n  \n  <td>\n    This token will be a long string generated with each new POST to this endpoint.\n  </td>\n</tr>\n\n<tr>\n  <td>\n    token_type\n  </td>\n  \n  <td>\n    Identifier of what type of token has be returned\n  </td>\n  \n  <td>\n    Will always be “bearer”\n  </td>\n</tr>\n\n<tr>\n  <td>\n    expires_in\n  </td>\n  \n  <td>\n    Time in seconds until expiry\n  </td>\n  \n  <td>\n    Will return 3600.&nbsp; Each call to the endpoint will result in a new token lasting 60 minutes, please cache and reuse the token for calls within 60 minutes of the last authentication\n  </td>\n</tr>\n\n<tr>\n  <td>\n    id_token\n  </td>\n  \n  <td>\n    JWT token to provide additional information about the user\n  </td>\n  \n  <td>\n    This token will be a long string generated with each new POST to this endpoint.\n  </td>\n</tr>\n\n<tr>\n  <td>\n    refresh_token\n  </td>\n  \n  <td>\n    Token to exchange for a new access token and refresh token\n  </td>\n  \n  <td>\n    This token will be a string generated with each new POST to this endpoint.\n  </td>\n</tr>\n\n<tr>\n  <td>\n    error\n  </td>\n  \n  <td>\n    Error title\n  </td>\n  \n  <td>\n  </td>\n</tr>\n\n<tr>\n  <td>\n    error_description\n  </td>\n  \n  <td>\n    Additional information to help understand the error provided.\n  </td>\n  \n  <td>\n  </td>\n</tr></table></figure> \n\n### Response example (tokens truncated)\n\n<pre class=\"wp-block-preformatted\">Content-Type: application/json; charset=utf-8\n{\n    \"token_type\": \"bearer\",\n    \"expires_in\": 3600,\n    \"access_token\": \"eyJ0eXAiOiJKV1….\",\n    \"refresh_token\": \"NAwdjwEX6vj….\",\n    \"id_token\": \"eyJ0eXAiOiJKV1QiLCJhb….\",\n}</pre>\n\n## Logout\n\n**(Optional)**: If you wish to log the user out of TID and return them to your application utilize the following URL:\n\n### URL&nbsp;\n\n<pre class=\"wp-block-preformatted\"><em><strong>{{Env Auth root}}</strong></em>/oauth/logout?id_token_hint=<em><strong>{{IdToken}}</strong>\n</em>&post_logout_redirect_uri=<em><strong>{{yourLogou</strong>tUrl}}</em></pre>\n\n## Refresh Authentication Token API\n\n### URL\n\n<pre class=\"wp-block-preformatted\">POST&nbsp; <em>{{Env Auth root}}</em>/oauth/token</pre>\n\n### Header Values\n\nThe web service expects you to post a URL Form Encoded string in the body, containing the following fields:<figure class=\"wp-block-table\">\n\n<table><tr>\n  <td>\n    <strong>Attribute</strong>\n  </td>\n  \n  <td>\n    <strong>Description</strong>\n  </td>\n  \n  <td>\n    <strong>Values</strong>\n  </td>\n  \n  <td>\n    <strong>Required</strong>\n  </td>\n</tr>\n\n<tr>\n  <td>\n    Authorization\n  </td>\n  \n  <td>\n    Basic Auth using Base64 encoded value of provided ClientID:ClientSecret\n  </td>\n  \n  <td>\n    Basic {Encoded value goes here}\n  </td>\n  \n  <td>\n    Y\n  </td>\n</tr>\n\n<tr>\n  <td>\n    Content-Type\n  </td>\n  \n  <td>\n    Specifies the request content type\n  </td>\n  \n  <td>\n    application/x-www-form-urlencoded\n  </td>\n  \n  <td>\n    Y\n  </td>\n</tr></table></figure> \n\n### Body Values\n\nThe web service expects you to post a URL Form Encoded string in the body, containing the following fields:<figure class=\"wp-block-table\">\n\n<table><tr>\n  <td>\n    <strong>Attribute</strong>\n  </td>\n  \n  <td>\n    <strong>Description</strong>\n  </td>\n  \n  <td>\n    <strong>Values</strong>\n  </td>\n  \n  <td>\n    <strong>Required</strong>\n  </td>\n</tr>\n\n<tr>\n  <td>\n    grant_type\n  </td>\n  \n  <td>\n    Required value to identify authentication type\n  </td>\n  \n  <td>\n    refresh_token\n  </td>\n  \n  <td>\n    Y\n  </td>\n</tr>\n\n<tr>\n  <td>\n    refresh_token\n  </td>\n  \n  <td>\n    The refresh code returned from the previous token endpoint\n  </td>\n  \n  <td>\n    {{RefreshToken}}\n  </td>\n  \n  <td>\n    Y\n  </td>\n</tr>\n\n<tr>\n  <td>\n    tenantDomain\n  </td>\n  \n  <td>\n    Required value\n  </td>\n  \n  <td>\n    trimble.com\n  </td>\n  \n  <td>\n    Y\n  </td>\n</tr></table></figure> \n\n### Input example&nbsp;\n\nThe following is an example of the parameters to help illustrate the definition. The string of characters after the word Basic would be the result of base 64 encoding MyProvidedClientId:MyClientSecret which you would replace with your own values.\n\n<pre class=\"wp-block-preformatted\">POST: https://id.trimble.com/oauth/token\nContent-Type: application/x-www-form-urlencoded\nAuthorization: Basic TXlQcm....\ngrant_type=refresh_token&refresh_token=sd3ds...&tenantDomain=trimble.com</pre>\n\n### Response\n\nThe service acknowledges with http code 200 for success (OK) and any other http code for failure.\n\nIn addition to the 200 http code, the web service responds with a JSON formatted document with the following fields to provide either confirmation of the receipt or an error:<figure class=\"wp-block-table\">\n\n<table><tr>\n  <td>\n    <strong>Attribute</strong>\n  </td>\n  \n  <td>\n    <strong>Description</strong>\n  </td>\n  \n  <td>\n    <strong>Values</strong>\n  </td>\n</tr>\n\n<tr>\n  <td>\n    access_token\n  </td>\n  \n  <td>\n    The security token that needs to be used on subsequent requests\n  </td>\n  \n  <td>\n    This token will be a long string generated with each new POST to this endpoint.\n  </td>\n</tr>\n\n<tr>\n  <td>\n    token_type\n  </td>\n  \n  <td>\n    Identifier of what type of token has be returned\n  </td>\n  \n  <td>\n    Will always be “bearer”\n  </td>\n</tr>\n\n<tr>\n  <td>\n    expires_in\n  </td>\n  \n  <td>\n    Time in seconds until expiry\n  </td>\n  \n  <td>\n    Will return 3600.&nbsp; Each call to the endpoint will result in a new token lasting 60 minutes, please cache and reuse the token for calls within 60 minutes of the last authentication\n  </td>\n</tr>\n\n<tr>\n  <td>\n    id_token\n  </td>\n  \n  <td>\n    JWT token to provide additional information about the user\n  </td>\n  \n  <td>\n    This token will be a long string generated with each new POST to this endpoint.\n  </td>\n</tr>\n\n<tr>\n  <td>\n    refresh_token\n  </td>\n  \n  <td>\n    Token to exchange for a new access token and refresh token\n  </td>\n  \n  <td>\n    This token will be a string generated with each new POST to this endpoint.\n  </td>\n</tr>\n\n<tr>\n  <td>\n    error\n  </td>\n  \n  <td>\n    Error title\n  </td>\n  \n  <td>\n  </td>\n</tr>\n\n<tr>\n  <td>\n    error_description\n  </td>\n  \n  <td>\n    Additional information to help understand the error provided.\n  </td>\n  \n  <td>\n  </td>\n</tr></table></figure> \n\n### Response example (tokens truncated)\n\n<pre class=\"wp-block-preformatted\">Content-Type: application/json; charset=utf-8\n{\n    \"token_type\": \"bearer\",\n&nbsp;&nbsp;&nbsp;&nbsp;\"expires_in\": 3600,\n &nbsp;&nbsp;&nbsp;\"access_token\": \"eyJ0eXAiOiJKV1....\",\n&nbsp;&nbsp;&nbsp;&nbsp;\"refresh_token\": \"NAwdjwEX6vj....\",\n&nbsp;&nbsp;&nbsp;&nbsp;\"id_token\": \"eyJ0eXAiOiJKV1QiLCJhb....\",&nbsp;\n}</pre>\n\n## Common Authentication Token\n\nAll REST calls made available by the Connected Farm data center will require proper authentication. To achieve this, a Trimble Identity access token must be passed to validate that the caller has permission. All subsequent calls are validated by Trimble’s TID service and the access token should be prefixed with _Bearer_ in the Authorization header.&nbsp;\n\nThe following is an example of the parameters to help illustrate the definition:\n\n<pre class=\"wp-block-preformatted\">GET: <br />https://cloud.api.trimble.com/Trimble-Ag-Software/externalApi/2.0/Organizations/<br />Authorization: Bearer&nbsp;<br />eyJ0eXAiOiJK....</pre>\n\n**_Note –_** _The authentication header is required but not included in the examples._"
        },
        {
            "name": "authorization",
            "x-displayName": "Authorization of Organizations",
            "description": "<div class=\"overview\">\n  In order to gain access to an Organization’s data, a user of that organization must authorize your application to do so.  This is accomplished through an OAuth process where the user will be directed to a Trimble Ag website where they are required to sign in, approve your application and select which Organizations to approve for access.\n</div>\n\n### Step 1\n\nFrom your application, or via another process of your choice, send the user that you want to approve your application to the following URL:\n\nProduction Url: [https://www.trimbleag.com/ThirdPartyAccess/ThirdPartyAuthorizationRedirect?clientid=_{{yourClientId}}&redirectionUrl={{authorizationRedirectUrl_][1]_}} _\n\nStaging Url: [https://rel-www.trimbleag.com/ThirdPartyAccess/ThirdPartyAuthorizationRedirect?clientid={{yourClientId}}&redirectionUrl={{authorizationRedirectUrl][2]_}}_\n\n### Step 2\n\nUser who are not actively logged in already will be directed to Trimble’s login service for Trimbleag.com\n\n### Step 3\n\nThe logged in user will be presented with with the Authorization page which utilizes your logo that was provided to us to use as part of the Authorization page\n\n### Step 4\n\nOnce your application is authorized for that user they will be presented with a list of Organizations they have access to and can select each Organization they want your application to have access to.&nbsp; Selecting an Trimble Ag Advisor Organization will provide access to all child Organizations that the logged in user has access to for that Advisor Organization.\n\n### Step 5\n\nOnce the user saves the selected Organizations they will be redirected to the return URL that you provided during setup of your application with us.\n\n### Step 6\n\nNow that the user has authorized you to access their data, the OrgIds authorized by that user will appear in the GET config/organizations result set.&nbsp; The returned results will be scoped to the token for that user.&nbsp; It is your responsibility to use the proper user token for the matching user in your system and use the refresh token before it expires.&nbsp; If the refresh token expires before you use it to acquire a new token, your system will need to acquire a new User Authorization Code to exchange for a new access and refresh token.&nbsp; User Authorization Code - Valid for 10 mins, Access Token - Valid for 1 hour, Refresh Token - Valid for 9 days\n\n**_For each user that approves data it is your responsibility to ensure that only the authorized user has access to the authorized data in your application_**.\n\n [1]: https://www.trimbleag.com/ThirdPartyAccess/ThirdPartyAuthorizationRedirect?clientid=%7B%7ByourClientId%7D%7D&redirectUrl=%7B%7BauthorizationRedirectUrl\n [2]: https://rel-www.trimbleag.com/ThirdPartyAccess/ThirdPartyAuthorizationRedirect?clientid=%7B%7ByourClientId%7D%7D&redirectUrl=%7B%7BauthorizationRedirectUrl"
        },
        {
            "name": "Organizations",
            "x-displayName": "Organizations",
            "description": "<div class=\"overview\">\n  Use this method from a third-party client application or web service to obtain a list of approved organizations for the access token.  For each user that approves Organization data it is your responsibility to ensure that only that authorized user has access to that data in your application.\n</div>"
        },
        {
            "name": "resources-overview",
            "x-displayName": "Overview",
            "description": "<div class=\"overview\">\n  The Resources APIs enable users to create clients, farms, fields, boundaries, guidance lines and landmarks in other applications; share those with Trimble Ag Software; and potentially send them to connected Trimble displays. New resources and/or edits from Trimble Ag Software or Trimble Displays can also be be sent back to the other applications.\n</div>"
        },
        {
            "name": "camelCase",
            "x-displayName": "Clients",
            "description": "<div class=\"overview\">\n  Clients are the highest level of the organization hierarchy for a Field. Clients contain Farms.\n</div>"
        },
        {
            "name": "camelCase",
            "x-displayName": "Clients 2",
            "description": "testing duplicate tag name rule"
        },
        {
            "name": "Farms",
            "x-displayName": "Farms",
            "description": "<div class=\"overview\">\n  Farms are the middle level of the organization hierarchy for a Field. Farms are contained within Clients, and contain Fields.\n</div>"
        },
        {
            "name": "Fields",
            "x-displayName": "Fields",
            "description": "<div class=\"overview\">\n  Fields define a piece of ground and are used to organize the work that happens on that ground. Fields are contained within Farms. Fields contain Boundaries, Field Extents, Guidance Lines, Landmarks, Crop Seasons, Prescriptions, Files, and Tasks.\n</div>"
        },
        {
            "name": "Boundaries",
            "x-displayName": "Boundaries",
            "description": "<div class=\"overview\">\n  Boundaries are the functional extent of a field and are used for operational workflows. On a Trimble display Boundaries can be viewed and edited using the Field Manager. On the web Boundaries are viewed from Landmarks page within a Crop Zone.\n</div>"
        },
        {
            "name": "FieldExtents",
            "x-displayName": "FieldExtents",
            "description": "<div class=\"overview\">\n  Field Extents represent the maximum managed area of a field and are used for record-keeping. On a Trimble display Field Extents can be viewed, but not edited using the Field Manager. On the web Field Extents can be viewed and edited from the Fields List.\n</div>"
        },
        {
            "name": "GuidanceLines",
            "x-displayName": "GuidanceLines",
            "description": "<div class=\"overview\">\n  Guidance Line are a navigation aid used by precision ag displays to define where to drive in a field. Guidance Lines are contained within Fields.\n</div>"
        },
        {
            "name": "Landmarks",
            "x-displayName": "Landmarks",
            "description": "<div class=\"overview\">\n  Landmarks are features that are points of interest within a Field. Landmarks are contained within Fields.\n</div>"
        },
        {
            "name": "devices-overview",
            "x-displayName": "Overview",
            "description": "<div class=\"overview\">\n  The Devices APIs enable sending recommendations directly to the devices that will execute those recommendations in the field.\n</div>"
        },
        {
            "name": "Devices",
            "x-displayName": "Devices",
            "description": "<div class=\"overview\">\n  Devices represent displays that are used for in-field operational workflows and are contained within Organizations.\n</div>"
        },
        {
            "name": "prescriptions-overview",
            "x-displayName": "Overview",
            "description": "<div class=\"overview\">\n  The Prescriptions APIs allow users to send prescriptions from partner applications to Trimble Ag Software and, if desired, directly to a field device.\n</div>"
        },
        {
            "name": "Prescriptions",
            "x-displayName": "Prescriptions",
            "description": "<div class=\"overview\">\n  Prescriptions represent a recommendation file. The zip file should contain at least one set of .shp, .dbf, and .shx files with the polygons and rates. The projection for the prescription  shapefiles should be GCS WGS84. The user does not need to include a .prj file in the zip file. The polygons should only have one exterior cycle and may contain one or more interior cycles (holes). The .dbf should have at least one numeric column of data that contains the corresponding rates for each polygon.  Multiple sets of shapefiles may be included in a single .zip file, but all the .dbf files must have the same rate column name for the display to recognize the rate column.\n</div>"
        },
        {
            "name": "jobdata-overview",
            "x-displayName": "Overview",
            "description": "<div class=\"overview\">\n  The Tasks APIs enable users to forward job data from devices and Trimble Ag Software to 3rd parties.\n</div>"
        },
        {
            "name": "EquipmentActivity",
            "x-displayName": "EquipmentActivity",
            "description": "<div class=\"overview\">\n  EquipmentActivity represents processed field tasks from Trimble displays that are in GeoJSON format. EquipmentActivity does not include tasks from other equipment manufacturer displays.\n</div>"
        },
        {
            "name": "Files",
            "x-displayName": "Files",
            "description": "<div class=\"overview\">\n  Task files from field devices that are stored in the Trimble Ag Software are available to be downloaded through the Files API. This is the same data available from the Tasks endpoints, but in an unprocessed format. These files may come directly from the device through a wireless connection or manually uploaded from users using USB sticks to transfer data. Files will be zip files with either an AgGPS (FMX/FMX+) or AgData (Precision-IQ) folder of files. Once downloaded these files may need to be combined and will need to be parsed using the Trimble plugins for the AgGateway ADAPT framework. More information about ADAPT can be found at adaptframework.org.\n</div>\n\n<p class=\"has-normal-font-size\">\n  <strong>Retrieve list of files from devices</strong>\n</p>\n\nUse this resource to obtain a list of files that are associated with a given organization. Each file returned will contain metadata about the file, and an Id plus a URL that can be used to directly download the file.\n\n**URL**\n\nGET _{{Env Data root}}_/1.0/Files/_{OrgId}_/Files\n\n**Input parameters**\n\nParameters in the URL are as follows:<figure class=\"wp-block-table is-style-stripes\">\n\n<table><tr>\n  <td>\n    <strong>Property</strong>\n  </td>\n  \n  <td class=\"has-text-align-left\" data-align=\"left\">\n    <strong>Description</strong>\n  </td>\n  \n  <td>\n    <strong>Required</strong>\n  </td>\n</tr>\n\n<tr>\n  <td>\n    direction\n  </td>\n  \n  <td class=\"has-text-align-left\" data-align=\"left\">\n    Should always be “<strong>From_Device</strong>” to get files that came from displays.\n  </td>\n  \n  <td>\n    Y\n  </td>\n</tr>\n\n<tr>\n  <td>\n    start\n  </td>\n  \n  <td class=\"has-text-align-left\" data-align=\"left\">\n    UTC date/time. Used to get all files received after this date, may be left off to get all files from all time\n  </td>\n  \n  <td>\n    N\n  </td>\n</tr>\n\n<tr>\n  <td>\n    end\n  </td>\n  \n  <td class=\"has-text-align-left\" data-align=\"left\">\n    UTC date/time. Used to get all files received before this date, may be left off to get all files from start UTC to now\n  </td>\n  \n  <td>\n    N\n  </td>\n</tr>\n\n<tr>\n  <td>\n    bookmark\n  </td>\n  \n  <td class=\"has-text-align-left\" data-align=\"left\">\n    String. Used to get the next set of files in a long list, not used if not continuing to get a long list of files\n  </td>\n  \n  <td>\n    N\n  </td>\n</tr>\n\n<tr>\n  <td>\n    startsFrom\n  </td>\n  \n  <td class=\"has-text-align-left\" data-align=\"left\">\n    UTC date/time. Used to get all files received after this date, may be left off to get all files from all time\n  </td>\n  \n  <td>\n    N\n  </td>\n</tr></table></figure> \n\nThis service uses a \"More\" bookmark.\n\nIn every response, Trimble provides a continuation object. If the continuation object hasMoreData = true and there is a value in the bookmark field, you can use the same request arguments as the previous request plus the provided bookmark value to fetch the next set of data for the specified arguments.\n\n**Input examples**\n\n<pre class=\"wp-block-code\"><code>GET https://cloud.api.trimble.com/Trimble-Ag-Software/externalApi/1.0/Files/{OrgId}/Files\n\nGET https://cloud.api.trimble.com/Trimble-Ag-Software/externalApi/1.0/Files/{OrgId}/Files?bookmark=MXwxMHwxMA==\n\nGET https://cloud.api.trimble.com/Trimble-Ag-Software/externalApi/1.0/Files/{OrgId}/Files?start=2014-01-01T12:00:00Z&end=2014-01-15T12:00:00.123Z\n\nGET https://cloud.api.trimble.com/Trimble-Ag-Software/externalApi/1.0/Files/{OrgId}/Files?assetId=42001\n\nContent-Type: Application/JSON\n</code></pre>\n\n**Response**\n\n<pre class=\"wp-block-code\"><code>{\n  \"continuation\": {\n    \"bookmark\": \"string\",\n    \"hasMoreData\": true,\n    \"totalCount\": 1052,\n    \"previousBookmark\": \"string\"\n  },\n  \"files\": &#91;\n    {\n      \"fileID\": \"00000000-0000-0000-0000-000000000000\",\n      \"deviceId\": 0,\n      \"name\": \"string\",\n      \"size\": 0,\n      \"fileType\": \"FmX\",\n      \"lastModified\": \"2021-01-29T20:06:12.674Z\",\n      ],\n    \"temporaryAccessUri\": \"string\"\n    }\n  ]\n}\n</code></pre>\n\nEach file has the following properties:<figure class=\"wp-block-table is-style-stripes\">\n\n<table><tr>\n  <td>\n    <strong>Property</strong>\n  </td>\n  \n  <td>\n    <strong>Description</strong>\n  </td>\n</tr>\n\n<tr>\n  <td>\n    fileID&nbsp;\n  </td>\n  \n  <td>\n    GUID of file\n  </td>\n</tr>\n\n<tr>\n  <td>\n    deviceId\n  </td>\n  \n  <td>\n    SQL ID of the display\n  </td>\n</tr>\n\n<tr>\n  <td>\n    name&nbsp;\n  </td>\n  \n  <td>\n    file name and ext\n  </td>\n</tr>\n\n<tr>\n  <td>\n    size&nbsp;\n  </td>\n  \n  <td>\n    file size in bytes\n  </td>\n</tr>\n\n<tr>\n  <td>\n    lastModified\n  </td>\n  \n  <td>\n    UTC date and time modified\n  </td>\n</tr>\n\n<tr>\n  <td>\n    fileType&nbsp;\n  </td>\n  \n  <td>\n    FmX, TmX\n  </td>\n</tr>\n\n<tr>\n  <td>\n    temporaryAccessUri\n  </td>\n  \n  <td>\n    URL of file for download. This URL will expire and should be used within 1 hour.\n  </td>\n</tr>\n\n<tr>\n  <td>\n    continuation\n  </td>\n  \n  <td>\n    hasMoreData:&nbsp; true or falsebookmark: bookmark text to pass to get more files\n  </td>\n</tr></table></figure> \n\n<p class=\"has-normal-font-size\">\n  <strong>Download specific files</strong>\n</p>\n\nUse the **temporaryAccessUri** returned the FileManagement/v2/Files API response to download individual files."
        },
        {
            "name": "adapt-introduction",
            "x-displayName": "Overview",
            "description": "<div class=\"overview\">\n  ADAPT – the Agricultural Data Application Programming Toolkit – is a framework for converting<br />agronomic data between various formats. This toolkit is the result of a collaborative industry effort and includes multiple pieces, including both an open source core framework and a set of plugins. The core framework consists of a common data model, a plugin manager, and a set of utilities for managing units of measure and data representations. The plugins are assemblies which convert data between that common data model and various other data formats.<br />\n</div>"
        },
        {
            "name": "AdaptToken",
            "x-displayName": "AdaptToken",
            "description": "<div class=\"overview\">\n</div><figure class=\"wp-block-image size-large\">\n\n[<img src=\"https://tst-agdeveloper.trimbleag.team/wp-content/uploads/Screen-Shot-2022-04-21-at-9.11.19-PM-1-1024x548.png\" alt=\"\" class=\"wp-image-2513\" />][1]</figure>\n\n [1]: https://tst-agdeveloper.trimbleag.team/wp-content/uploads/Screen-Shot-2022-04-21-at-9.11.19-PM-1.png"
        },
        {
            "name": "The ADAPT Data Model",
            "x-displayName": "The ADAPT Data Model",
            "description": "<div class=\"overview\">\n  The entire functionality of ADAPT is centered on converting data to and from a common Application<br />Data Model. As an application developer, this means you only need to integrate with one data model.<br />The Application Data Model is contained in the AgGateway.ADAPT.ApplicationDataModel.dll assembly.<br />\n</div>\n\n<p class=\"has-normal-font-size\">\n  <strong>Plugin Manager</strong>\n</p>\n\nThe plugin manager is the main entry point when using ADAPT as an SDK. It detects and identifies available plugins, determines which plugin is appropriate for reading a given data source, and marshals plugins and their dependencies as needed. It is contained in the AgGateway.ADAPT.PluginManager.dll assembly.\n\n<p class=\"has-normal-font-size\">\n  <strong>Representation</strong>\n</p>\n\nThe representation assembly, AgGateway.ADAPT.Representation.dll, includes utility classes to help work with units of measure and data representations (similar in concept to ISO DDI’s).\n\n<p class=\"has-normal-font-size\">\n  <strong>Plugins</strong>\n</p>\n\nEach plugin is responsible for translating data between the Application Data Model and a specific external data format. The Trimble plugin supports both the AgGPS and AgData file formats."
        },
        {
            "name": "Getting Started",
            "x-displayName": "Getting Started",
            "description": "<div class=\"overview\">\n</div>\n\n<p class=\"has-normal-font-size\">\n  <strong>Referencing ADAPT</strong>\n</p>\n\nYou can reference ADAPT using NuGet by referencing the package at <https://www.nuget.org/packages/AgGatewayADAPTFramework/>&nbsp; If you would rather not use a NuGet client, you can download any version of the package from nuget.org and extract it using a zip utility. In addition to executables, the ADAPT package contains a “Resources” folder that contains RepresentationSystem.xml and UnitSystem.xml. This entire Resources folder needs to be copied to your application’s \\bin directory for the representation system to work.\n\n<p class=\"has-normal-font-size\">\n  <strong>Application Data Model</strong>\n</p>\n\nThe ADAPT Application Data Model is being documented by the AgGateway committee responsible forthe ADAPT project. The project homepage is found at <http://www.adaptframework.org/>\n\n<p class=\"has-normal-font-size\">\n  <strong>Plugin Manager</strong>\n</p>\n\nThe Plugin Manager is used to retrieve and marshal plugins. The PluginFactory must be passed a filesystem directory where the plugin assemblies are stored. Note that while there may be subdirectories (i.e., a folder for each manufacturers’ plugins), the plugin manager will only recurse one level of subdirectories. In other words, passing “C:\\AdaptPlugins\\” to the PluginFactory would cause it to discover plugins inside both “C:\\AdaptPlugins\\” and first level subdirectories like “C:\\AdaptPlugins\\Trimble\\”, but not in “C:\\AdaptPlugins\\Trimble\\AgGPS\\”. Following is sample code which shows how to load plugins and import a datacard.\n\n<pre class=\"wp-block-code\"><code>PluginFactory factory = new PluginFactory(\"directory containing plugins\");\nList&lt;string&gt; pluginNames = factory.AvailablePlugins;\nforeach(string pluginName in pluginNames)\n{\n  IPlugin plugin = factory.GetPlugin(pluginName);\n  if(plugin.IsDataCardSupported(\"datacard path\")\n  {\n    ApplicationDataModel dataModel = plugin.Import(\"datacard path\");\n    return dataModel;\n  }\n}</code></pre>\n\n<p class=\"has-normal-font-size\">\n  <strong>Representation</strong>\n</p>\n\nThe Representation namespace includes two sets of helper API’s the Unit of Measure System and the Representation System. Together, they form something similar to the ISO DDI system of describing data. A Representation describes the type of data – such as harvest moisture, implement section state, or the GPS receiver offsets. A Unit of Measure provides both the syntax for specifying a unit and the ability to convert between different units of measure or perform arithmetic operations. You can explore the Representations and the units of measure in the included RepresentationSystem.xml and UnitSystem.xml files. Note that these xml files are used by the Representation namespace; if you reference the ADAPT Representation assembly, you will need to include those xml files as resources which are copied to your application’s executing directory.\n\n<p class=\"has-normal-font-size\">\n  <strong>Unit of Measure System</strong>\n</p>\n\nThe simplest way to retrieve unit of measure objects is using static methods on the UnitSystemManager class. To retrieve a UnitOfMeasure instance, pass a unit code to UnitSystemManager.GetUnitOfMeasure(“unit code”). You may also use UN Rec20 unit codes, via UnitSystemManager.FromUNRec20Code(“UN unit code”).\n\nTo help use the units of measure: Once you create a NumericValue, which consists of a value and unit, we offer helper methods for arithmetic operations or unit conversions. If you add the namespace: using AgGateway.ADAPT.Representation.UnitSystem.ExtensionMethods; You will then have access to NumericalValue.Add(double value), NumericalValue.ConvertToUnit(UnitOfMeasure unit), and other helper methods."
        },
        {
            "name": "Trimble ADAPT Plugins",
            "x-displayName": "Trimble ADAPT Plugins",
            "description": "<div class=\"overview\">\n</div>\n\nThe ADAPT plugins to read Trimble display data are\n\n  * Trimble.Ag.ADAPT.Plugins.AgData.dll - PIQ and related displays\n  * Trimble.Ag.ADAPT.Plugins.AgGPS.dll - FMX and related displays\n\n<p class=\"has-normal-font-size\">\n  <strong>Initialization</strong>\n</p>\n\nTrimble plugins require a license token to be validated in the initialization process that is acquired through the Trimble Cloud API system. Applications will need to be registered in the Trimble Cloud system to access this API.\n\nTo simplify the process of authenticating and requesting the token, functions have been added to the Trimble plugins that will perform the API calls for a 3rd party application to request a new token. The function is:\n\n<pre class=\"wp-block-code\"><code>AdaptTokenClient.GetTokenAsync( {AppName}, {AppClientID}, {AppSecret} )\n</code></pre>\n\n  * AppName: Name of calling application as registered in Trimble Cloud\n  * AppClientID: GUID assigned to application by Trimble Cloud\n  * AppSecret: Application password assigned by Trimble Cloud\n\nThe token structure returned will have the following:\n\n  * token: string with encrypted token value to be used in Initialize function\n  * expiration: date and time the token expires. Tokens can be reused up to the expiration date.\n\n<p class=\"has-normal-font-size\">\n  <strong>Datacard Paths</strong>\n</p>\n\nThe Trimble plugin will support multiple datacard paths. It will support a path that includes the **AgGPS** or **AgData** directory (ex: C:\\TrimbleData\\AgGPS). It will also support passing the parent directory as well (ex: C:\\TrimbleData).\n\nPlease note that the plugin will not support both file formats at once. If you have a datacard path that has both an AgGPS and AgData directory, it will only read the AgGPS information."
        }
    ],
    "servers": [
        {
            "url": "https://tst-agdeveloper.trimbleag.team/wp-json/documentation"
        }
    ],
    "paths": {
        "/token": {
            "post": {
                "tags": [
                    "adaptToken"
                ],
                "summary": "Generates adapt token for an application Id.",
                "responses": {
                    "200": {
                        "description": "The base 64 encoded adapt token string."
                    }
                }
            }
        },
        "/{OrgId}/balances/{cropYear}": {
            "get": {
                "tags": [
                    "Balance"
                ],
                "summary": "Gets a list of inventory balances for the organization for a year.",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "cropYear",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "materialType",
                        "in": "query",
                        "schema": {
                            "$ref": "#/components/schemas/MaterialTypeEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The balance list.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Balance"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Balance"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Balance"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{OrgId}/boundaries": {
            "get": {
                "tags": [
                    "Boundaries"
                ],
                "summary": "Gets a list of boundaries of the field for the organization.",
                "operationId": "GetBoundaries",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "includeLinks",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    },
                    {
                        "name": "bookmark",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The boundaries list.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BoundarySummary"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BoundarySummary"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BoundarySummary"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Boundaries"
                ],
                "summary": "Creates boundary for the field.",
                "operationId": "CreateBoundary",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "includeLinks",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpsertBoundary"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpsertBoundary"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpsertBoundary"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The Boundary Id.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "format": "uuid"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "format": "uuid"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "string",
                                    "format": "uuid"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{OrgId}/boundaries/{id}": {
            "get": {
                "tags": [
                    "Boundaries"
                ],
                "summary": "Gets a boundary by Id for the organization.",
                "operationId": "GetBoundary",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "includeLinks",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The boundary.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Boundary"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Boundary"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Boundary"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Boundaries"
                ],
                "summary": "Updates the boundary",
                "operationId": "UpdateBoundary",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpsertBoundary"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpsertBoundary"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpsertBoundary"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/{OrgId}/boundaries/{id}/retire": {
            "patch": {
                "tags": [
                    "Boundaries"
                ],
                "summary": "Retires the Boundary from the Organization",
                "operationId": "RetireBoundary",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The Boundary Id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/{OrgId}/boundaries/{id}/unretire": {
            "patch": {
                "tags": [
                    "Boundaries"
                ],
                "summary": "Unretires the Boundary from the Organization",
                "operationId": "UnretireBoundary",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The Boundary Id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/{OrgId}/clients": {
            "get": {
                "tags": [
                    "Clients"
                ],
                "summary": "Gets a list of clients for the organization.",
                "operationId": "GetClients",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "includeLinks",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    },
                    {
                        "name": "bookmark",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The client list.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Client"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Client"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Client"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Clients"
                ],
                "summary": "Creates client for the organization.",
                "operationId": "CreateClient",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "includeLinks",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpsertClientRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpsertClientRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpsertClientRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The clientId.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "integer",
                                    "format": "int64"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "format": "int64"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "integer",
                                    "format": "int64"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{OrgId}/clients/{id}": {
            "get": {
                "tags": [
                    "Clients"
                ],
                "summary": "Gets a client by Id for the organization.",
                "operationId": "GetClient",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "includeLinks",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The client.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Client"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Client"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Client"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Clients"
                ],
                "summary": "Updates the client name",
                "operationId": "UpdateClient",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpsertClientRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpsertClientRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpsertClientRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/{OrgId}/clients/{id}/retire": {
            "patch": {
                "tags": [
                    "Clients"
                ],
                "summary": "Retires the Client from the Organization",
                "operationId": "RetireClient",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "description": "The OrgId",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ClientId",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "cascade",
                        "in": "query",
                        "description": "If set to true, retires all the farms and fields that are under the client",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/{OrgId}/clients/{id}/unretire": {
            "patch": {
                "tags": [
                    "Clients"
                ],
                "summary": "Unretires the Client from the Organization",
                "operationId": "UnretireClient",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "description": "The OrgId",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ClientId",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/{OrgId}/contacts": {
            "get": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Get contacts",
                "operationId": "GetContacts",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "operatorGroupId",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "includeLinks",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The contact list.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Contact"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Contact"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Contact"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Create Contact",
                "operationId": "CreateContact",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "includeLinks",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateContact"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateContact"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateContact"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/{OrgId}/contacts/{id}": {
            "get": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Get contact.",
                "operationId": "GetContact",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "includeLinks",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The contact.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContactDetail"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContactDetail"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContactDetail"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Update contact",
                "operationId": "UpdateContact",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateContact"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateContact"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateContact"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            },
            "delete": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Deletes the contact",
                "operationId": "DeleteContact",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "/{OrgId}/cropseasons": {
            "get": {
                "tags": [
                    "CropSeasonsV1.0"
                ],
                "summary": "Gets a list of CropSeason for the organization.",
                "operationId": "GetCropSeasons",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "includeLinks",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The CropSeason list.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CropSeason"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CropSeason"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CropSeason"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "CropSeasonsV1"
                ],
                "summary": "Creates a cropseason for the Organization",
                "operationId": "CreateCropSeason",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "includeLinks",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCropSeason"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCropSeason"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCropSeason"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The CropSeason Id.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Int64IdResult"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Int64IdResult"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Int64IdResult"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{OrgId}/cropseasons/{id}": {
            "get": {
                "tags": [
                    "CropSeasons v2"
                ],
                "summary": "Gets a CropSeason by Id for the organization.",
                "operationId": "GetCropSeason",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "includeLinks",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The CropSeason.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/CropSeason"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CropSeason"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CropSeason"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "CropV2Seasons"
                ],
                "summary": "Updates the cropseason",
                "operationId": "UpdateCropSeason",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCropSeasonRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCropSeasonRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCropSeasonRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/{OrgId}/cropzoneactivities": {
            "get": {
                "tags": [
                    "CropZoneActivity API"
                ],
                "summary": "Gets a list of cropZone activities for the organization.",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "startDate",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "cropZoneId",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "bookmark",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CropZoneActivities list.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CropZoneActivity"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CropZoneActivity"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CropZoneActivity"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{OrgId}/cropzoneactivities/{id}": {
            "get": {
                "tags": [
                    "CropZoneActivity API"
                ],
                "summary": "Get CropZoneActivity by Id",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The CropZoneActivity.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/CropZoneActivityDetail"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CropZoneActivityDetail"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CropZoneActivityDetail"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{OrgId}/cropzones/{cropZoneId}/extent": {
            "get": {
                "tags": [
                    "CropZoneExtents"
                ],
                "summary": "Get cropzone extent by cropZoneId",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "cropZoneId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The crop zone extent.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/CropZoneExtent"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CropZoneExtent"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CropZoneExtent"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "CropZoneExtents"
                ],
                "summary": "Update crop zone extent.",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "cropZoneId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCropZoneExtent"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCropZoneExtent"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCropZoneExtent"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            },
            "delete": {
                "tags": [
                    "cropZoneExtents"
                ],
                "summary": "Deletes the crop zone extent",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "cropZoneId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "/{OrgId}/cropzones": {
            "get": {
                "tags": [
                    "CropZones"
                ],
                "summary": "Gets a list of crop zones for the organization.",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The crop zones list.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CropZone"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CropZone"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CropZone"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "CropZones"
                ],
                "summary": "Creates a crop zone for the Organization",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CropZone"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CropZone"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CropZone"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The CropZone Id.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Int64IdResult"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Int64IdResult"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Int64IdResult"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{OrgId}/cropzones/{id}": {
            "get": {
                "tags": [
                    "CropZones"
                ],
                "summary": "Gets a crop zone by Id for the organization.",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The crop zone by Id.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CropZone"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CropZone"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CropZone"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "CropZones"
                ],
                "summary": "Updates the CropZone",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCropZoneRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCropZoneRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCropZoneRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            },
            "delete": {
                "tags": [
                    "CropZones"
                ],
                "summary": "Deletes a crop zone for the Organization",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/CropZone"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CropZone"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CropZone"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "204 - No Content"
                    }
                }
            }
        },
        "/{OrgId}/devices": {
            "get": {
                "tags": [
                    "Devices"
                ],
                "summary": "Gets a list of devices for the organization.",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The device list.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Device"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Device"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Device"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{OrgId}/devices/{id}": {
            "get": {
                "tags": [
                    "Devices"
                ],
                "summary": "Gets a device by Id for the organization.",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The device.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Device"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Device"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Device"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{OrgId}/equipmentactivities": {
            "get": {
                "tags": [
                    "EquipmentActivity"
                ],
                "summary": "Gets a list of equipmentactivities for the organization.",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "startDate",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "cropZoneId",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "bookmark",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "EquipmentActivities list.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/EquipmentActivity"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/EquipmentActivity"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/EquipmentActivity"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{OrgId}/equipmentactivities/{id}": {
            "get": {
                "tags": [
                    "EquipmentActivity"
                ],
                "summary": "Get EquipmentActivity by Id",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The EquipmentActivity.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/EquipmentActivityDetail"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EquipmentActivityDetail"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EquipmentActivityDetail"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{OrgId}/equipmentgroups": {
            "get": {
                "tags": [
                    "EquipmentGroup"
                ],
                "summary": "Gets a list of equipment group for the organization.",
                "operationId": "GetEquipmentGroups",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "includeLinks",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The equipment groups list.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/EquipmentGroup"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/EquipmentGroup"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/EquipmentGroup"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "EquipmentGroup"
                ],
                "summary": "Creates equipment group for the Organization.",
                "operationId": "CreateEquipmentGroup",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "includeLinks",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpsertEquipmentGroupRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpsertEquipmentGroupRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpsertEquipmentGroupRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/{OrgId}/equipmentgroups/{id}": {
            "get": {
                "tags": [
                    "EquipmentGroup"
                ],
                "summary": "Gets an equipment group by Id",
                "operationId": "GetEquipmentGroup",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "includeLinks",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The equipment group.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/EquipmentGroup"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EquipmentGroup"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EquipmentGroup"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "EquipmentGroup"
                ],
                "summary": "Updates the equipment group for the Organization.",
                "operationId": "UpdateEquipmentGroup",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpsertEquipmentGroupRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpsertEquipmentGroupRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpsertEquipmentGroupRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            },
            "delete": {
                "tags": [
                    "EquipmentGroup"
                ],
                "summary": "Deletes the equipment group",
                "operationId": "DeleteEquipmentGroup",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "/equipmentmanufacturers": {
            "get": {
                "tags": [
                    "EquipmentManufacturers"
                ],
                "summary": "Gets a list of equipment manufacturers",
                "operationId": "GetEquipmentManufacturers",
                "responses": {
                    "200": {
                        "description": "The equipment manufacturers list.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/EquipmentManufacturer"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/EquipmentManufacturer"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/EquipmentManufacturer"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{OrgId}/farms": {
            "get": {
                "tags": [
                    "Farms"
                ],
                "operationId": "GetFarms",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "includeRetired",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    },
                    {
                        "name": "includeLinks",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    },
                    {
                        "name": "bookmark",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            },
            "post": {
                "tags": [
                    "Farms"
                ],
                "operationId": "CreateFarm",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "includeLinks",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpsertFarm"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpsertFarm"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpsertFarm"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/{OrgId}/farms/{id}": {
            "get": {
                "tags": [
                    "Farms"
                ],
                "operationId": "GetFarm",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "includeLinks",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            },
            "put": {
                "tags": [
                    "Farms"
                ],
                "operationId": "UpdateFarm",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpsertFarm"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpsertFarm"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpsertFarm"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/{OrgId}/farms/{id}/retire": {
            "patch": {
                "tags": [
                    "Farms"
                ],
                "operationId": "RetireFarm",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "cascade",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/{OrgId}/farms/{id}/unretire": {
            "patch": {
                "tags": [
                    "Farms"
                ],
                "operationId": "UnretireFarm",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/{OrgId}/fields/{fieldId}/extent": {
            "get": {
                "tags": [
                    "FieldExtents"
                ],
                "summary": "Get field extent by FieldId",
                "operationId": "GetFieldExtents",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "fieldId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "includeLinks",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The field extent.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/FieldExtent"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FieldExtent"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FieldExtent"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "FieldExtents"
                ],
                "summary": "Updates the Field Extent",
                "operationId": "UpdateFieldExtent",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "fieldId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateFieldExtent"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateFieldExtent"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateFieldExtent"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "/{OrgId}/fields": {
            "get": {
                "tags": [
                    "Fields"
                ],
                "summary": "Gets a list of fields for the organization.",
                "operationId": "GetFields",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "includeLinks",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    },
                    {
                        "name": "bookmark",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The field list.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Field"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Field"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Field"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Fields"
                ],
                "summary": "Creates field for the organization.",
                "operationId": "CreateField",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "includeLinks",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpsertFieldRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpsertFieldRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpsertFieldRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The fieldId.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "integer",
                                    "format": "int64"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "format": "int64"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "integer",
                                    "format": "int64"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{OrgId}/fields/{id}": {
            "get": {
                "tags": [
                    "Fields"
                ],
                "summary": "Gets a field by Id for the organization.",
                "operationId": "GetField",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "includeLinks",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The field.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Field"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Field"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Field"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Fields"
                ],
                "summary": "Updates the field name",
                "operationId": "UpdateField",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpsertFieldRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpsertFieldRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpsertFieldRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/{OrgId}/fields/{id}/retire": {
            "patch": {
                "tags": [
                    "Fields"
                ],
                "summary": "Retires the Field from the Organization",
                "operationId": "RetireField",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The FieldId",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/{OrgId}/fields/{id}/unretire": {
            "patch": {
                "tags": [
                    "Fields"
                ],
                "summary": "Unretires the Field from the Organization",
                "operationId": "UnretireField",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The FieldId",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/{OrgId}/guidancelines": {
            "get": {
                "tags": [
                    "GuidanceLines"
                ],
                "summary": "Gets list of Guidance lines",
                "operationId": "GetGuidanceLines",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "includeLinks",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    },
                    {
                        "name": "bookmark",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/GuidanceSummary"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/GuidanceSummary"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/GuidanceSummary"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "GuidanceLines"
                ],
                "operationId": "CreateGuidanceline",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "includeLinks",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpsertGuidancePattern"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpsertGuidancePattern"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpsertGuidancePattern"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/{OrgId}/guidancelines/{id}": {
            "get": {
                "tags": [
                    "GuidanceLines"
                ],
                "operationId": "GetGuidanceline",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "includeLinks",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            },
            "put": {
                "tags": [
                    "GuidanceLines"
                ],
                "operationId": "UpdateGuidanceline",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpsertGuidancePattern"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpsertGuidancePattern"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpsertGuidancePattern"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/{OrgId}/guidancelines/{id}/retire": {
            "patch": {
                "tags": [
                    "GuidanceLines"
                ],
                "operationId": "RetireGuidanceline",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/{OrgId}/guidancelines/{id}/unretire": {
            "patch": {
                "tags": [
                    "GuidanceLines"
                ],
                "operationId": "UnretireGuidanceline",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/{OrgId}/implements": {
            "get": {
                "tags": [
                    "Implement"
                ],
                "summary": "Gets a list of implements for the organization.",
                "operationId": "GetImplements",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "includeLinks",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The implements list.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Implement"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Implement"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Implement"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Implement"
                ],
                "summary": "Creates implement for the Organization.",
                "operationId": "CreateImplement",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "includeLinks",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpsertImplementRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpsertImplementRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpsertImplementRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/{OrgId}/implements/{id}": {
            "get": {
                "tags": [
                    "Implement"
                ],
                "summary": "Gets an implement by Id",
                "operationId": "GetImplement",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "includeLinks",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The implement.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Implement"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Implement"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Implement"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Implement"
                ],
                "summary": "Updates the implement for the Organization.",
                "operationId": "UpdateImplement",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpsertImplementRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpsertImplementRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpsertImplementRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "/{OrgId}/implements/{id}/retire": {
            "patch": {
                "tags": [
                    "Implement"
                ],
                "summary": "Retires the implement from the Organization",
                "operationId": "RetireImplement",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "description": "The OrgId",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ImplementId",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "/{OrgId}/implements/{id}/unretire": {
            "patch": {
                "tags": [
                    "Implement"
                ],
                "summary": "Unretires the implement from the Organization",
                "operationId": "UnretireImplement",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "description": "The OrgId",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ImplementId",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "/{OrgId}/landmarks": {
            "get": {
                "tags": [
                    "Landmarks"
                ],
                "summary": "Gets list of landmarks for the organization",
                "operationId": "GetLandmarks",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "includeLinks",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    },
                    {
                        "name": "bookmark",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LandmarkSummary"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LandmarkSummary"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LandmarkSummary"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Landmarks"
                ],
                "operationId": "CreateLandmark",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "includeLinks",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpsertLandmark"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpsertLandmark"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpsertLandmark"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/{OrgId}/landmarks/{id}": {
            "get": {
                "tags": [
                    "Landmarks"
                ],
                "operationId": "GetLandmark",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "includeLinks",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            },
            "put": {
                "tags": [
                    "Landmarks"
                ],
                "operationId": "UpdateLandmark",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpsertLandmark"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpsertLandmark"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpsertLandmark"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/{OrgId}/landmarks/{id}/retire": {
            "patch": {
                "tags": [
                    "Landmarks"
                ],
                "operationId": "RetireLandmark",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/{OrgId}/landmarks/{id}/unretire": {
            "patch": {
                "tags": [
                    "Landmarks"
                ],
                "operationId": "UnretireLandmark",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/{OrgId}/layers": {
            "get": {
                "tags": [
                    "Layers"
                ],
                "summary": "Gets a list of Layers for the organization.",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "equipmentActivityId",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "bookmark",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Layers list.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Layer"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Layer"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Layer"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{OrgId}/layers/{id}": {
            "get": {
                "tags": [
                    "Layers"
                ],
                "summary": "Get Layer by Id",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Layer",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Layer"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Layer"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Layer"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{OrgId}/layers/{id}/sensors": {
            "get": {
                "tags": [
                    "Layers"
                ],
                "summary": "Get list of sensors on a layer",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "LayerSensors",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LayerSensor"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LayerSensor"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LayerSensor"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{OrgId}/layers/{id}/samples": {
            "get": {
                "tags": [
                    "Layers"
                ],
                "summary": "Get list of samples on a layer",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "sensorKey",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "LayerSamples",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LayerSample"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LayerSample"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LayerSample"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{OrgId}/managementzones": {
            "get": {
                "tags": [
                    "ManagementZone"
                ],
                "summary": "Gets a list of management zone for the organization.",
                "operationId": "GetManagementzones",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "includeLinks",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The management zone list.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ManagementZone"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ManagementZone"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ManagementZone"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "ManagementZone"
                ],
                "summary": "Creates management zone for the field.",
                "operationId": "CreateManagementzone",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "includeLinks",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateManagementZoneRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateManagementZoneRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateManagementZoneRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/{OrgId}/managementzones/{id}": {
            "get": {
                "tags": [
                    "ManagementZone"
                ],
                "summary": "Gets a management zone by Id",
                "operationId": "GetManagementzone",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "includeLinks",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The management zone.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ManagementZone"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ManagementZone"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ManagementZone"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "ManagementZone"
                ],
                "summary": "Updates the management zone",
                "operationId": "UpdateManagementzone",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateManagementZoneRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateManagementZoneRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateManagementZoneRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            },
            "delete": {
                "tags": [
                    "ManagementZone"
                ],
                "summary": "Deletes the management zone",
                "operationId": "DeleteManagementzone",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "/{OrgId}/managementzones/{managementzoneId}/detail": {
            "get": {
                "tags": [
                    "ManagementZoneDetail"
                ],
                "summary": "Gets a list of management zone Details",
                "operationId": "GetManagementZoneDetails",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "managementzoneId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "includeLinks",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The management zone Details list.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ManagementZoneDetail"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ManagementZoneDetail"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ManagementZoneDetail"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "ManagementZoneDetail"
                ],
                "summary": "Creates management zone detail.",
                "operationId": "CreateManagementzonedetail",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "managementzoneId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "includeLinks",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/UpsertManagementZoneDetailRequest"
                                }
                            }
                        },
                        "text/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/UpsertManagementZoneDetailRequest"
                                }
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/UpsertManagementZoneDetailRequest"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/{OrgId}/managementzones/{managementzoneId}/detail/{id}": {
            "get": {
                "tags": [
                    "ManagementZoneDetail"
                ],
                "summary": "Gets a management zone detail by Id",
                "operationId": "GetManagementzonedetail",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "managementzoneId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "includeLinks",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The management zone detail.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ManagementZone"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ManagementZone"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ManagementZone"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "ManagementZoneDetail"
                ],
                "summary": "Updates the management zone detail",
                "operationId": "UpdateManagementzonedetail",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "managementzoneId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpsertManagementZoneDetailRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpsertManagementZoneDetailRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpsertManagementZoneDetailRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            },
            "delete": {
                "tags": [
                    "ManagementZoneDetail"
                ],
                "summary": "Deletes the management zone detail",
                "operationId": "DeleteManagementzonedetail",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "managementzoneId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "/{OrgId}/mastercrops": {
            "get": {
                "tags": [
                    "MasterCrops"
                ],
                "summary": "Gets a list of master crops for the organization.",
                "operationId": "GetMasterCrops",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The master crops list.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MasterCrop"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MasterCrop"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MasterCrop"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{OrgId}/mastercrops/{id}": {
            "get": {
                "tags": [
                    "MasterCrops"
                ],
                "summary": "Gets a master crop by Id for the organization.",
                "operationId": "GetMasterCrop",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A master crop.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/MasterCrop"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MasterCrop"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MasterCrop"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{OrgId}/materials/{materialId}/balance": {
            "get": {
                "tags": [
                    "MaterialBalance"
                ],
                "summary": "Gets balance records by MaterialId for an organization.",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "materialId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "cropYear",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The balance records by MaterialId."
                    }
                }
            }
        },
        "/{OrgId}/materials/{materialId}/purchases": {
            "get": {
                "tags": [
                    "MaterialPurchase"
                ],
                "summary": "Gets purchase records by MaterialId for an organization.",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "materialId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "cropYear",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The purchase records by MaterialId."
                    }
                }
            }
        },
        "/{OrgId}/materials": {
            "get": {
                "tags": [
                    "Materials"
                ],
                "summary": "Gets a list of materials",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "$ref": "#/components/schemas/MaterialTypeEnum"
                        }
                    },
                    {
                        "name": "includeRetired",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Material"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Material"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Material"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Materials"
                ],
                "summary": "Create material.",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateMaterial"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateMaterial"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateMaterial"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/{OrgId}/materials/{id}": {
            "get": {
                "tags": [
                    "Materials"
                ],
                "summary": "Gets a material by Id for the organization.",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The material.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/MaterialDetail"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MaterialDetail"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MaterialDetail"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Materials"
                ],
                "summary": "Updates the org Material",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateMaterial"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateMaterial"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateMaterial"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "/{OrgId}/materials/{id}/retire": {
            "patch": {
                "tags": [
                    "Materials"
                ],
                "summary": "Retires Material",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The materialId",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/{OrgId}/materials/{id}/unretire": {
            "patch": {
                "tags": [
                    "Materials"
                ],
                "summary": "Unretires Material",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The MaterialId",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/{OrgId}/operationsubtypes": {
            "get": {
                "tags": [
                    "OperationSubtype"
                ],
                "summary": "Gets a list of operation sub types for the organization.",
                "operationId": "GetOperationSubTypes",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "includeLinks",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation sub types list.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OperationSubType"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OperationSubType"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OperationSubType"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "OperationSubtype"
                ],
                "summary": "Creates operation sub type for the Organization.",
                "operationId": "CreateOperationSubType",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "includeLinks",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpsertOperationSubTypeRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpsertOperationSubTypeRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpsertOperationSubTypeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/{OrgId}/operationsubtypes/{id}": {
            "get": {
                "tags": [
                    "OperationSubtype"
                ],
                "summary": "Gets an operation sub type by Id",
                "operationId": "GetOperationSubType",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "includeLinks",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation sub type.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationSubType"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationSubType"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationSubType"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "OperationSubtype"
                ],
                "summary": "Updates the operation sub type for the Organization.",
                "operationId": "UpdateOperationSubType",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpsertOperationSubTypeRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpsertOperationSubTypeRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpsertOperationSubTypeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            },
            "delete": {
                "tags": [
                    "OperationSubtype"
                ],
                "summary": "Deletes the operation sub type",
                "operationId": "DeleteOperationSubType",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "/operationtypes": {
            "get": {
                "tags": [
                    "OperationType"
                ],
                "summary": "Gets a list of Operation Types",
                "operationId": "GetOperationTypes",
                "responses": {
                    "200": {
                        "description": "The Operation Types list.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OperationType"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OperationType"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OperationType"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{OrgId}/operatorgroups/{id}/contacts": {
            "get": {
                "tags": [
                    "OperatorGroupContacts"
                ],
                "summary": "Get operator group contacts.",
                "operationId": "GetOperatorGroupContacts",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "includeLinks",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The contact list.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContactSummary"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContactSummary"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContactSummary"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{OrgId}/operatorgroups/{id}/contacts/{contactId}": {
            "post": {
                "tags": [
                    "OperatorGroupContacts"
                ],
                "summary": "Add contact to operator group.",
                "operationId": "AddContactToOperatorGroup",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "contactId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            },
            "delete": {
                "tags": [
                    "OperatorGroupContacts"
                ],
                "summary": "Remove contact from operator group.",
                "operationId": "RemoveContactFromOperatorGroup",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "contactId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/{OrgId}/operatorgroups": {
            "get": {
                "tags": [
                    "OperatorGroups"
                ],
                "summary": "Get list of Operator groups for the organization.",
                "operationId": "GetOperatorGroups",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "includeLinks",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operator groups list.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OperatorGroup"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OperatorGroup"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OperatorGroup"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "OperatorGroups"
                ],
                "summary": "Creates Operator group",
                "operationId": "CreateOperatorGroup",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "includeLinks",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateOperatorGroup"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateOperatorGroup"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateOperatorGroup"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/{OrgId}/operatorgroups/{id}": {
            "get": {
                "tags": [
                    "OperatorGroups"
                ],
                "summary": "Get Operator group by Id",
                "operationId": "GetOperatorGroup",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "includeLinks",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Operator group.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperatorGroup"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperatorGroup"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperatorGroup"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "OperatorGroups"
                ],
                "summary": "Update Operator group",
                "operationId": "UpdateOperatorGroup",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OperatorGroup"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OperatorGroup"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/OperatorGroup"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            },
            "delete": {
                "tags": [
                    "OperatorGroups"
                ],
                "summary": "Delete Operator group",
                "operationId": "DeleteOperatorGroup",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "/organizations": {
            "get": {
                "tags": [
                    "Organizations"
                ],
                "summary": "Gets a list of organizations for the current user.",
                "parameters": [
                    {
                        "name": "skip",
                        "in": "query",
                        "description": "The number of records to skip (default 0).",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "take",
                        "in": "query",
                        "description": "The number of records to take (default 50).",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "includeLinks",
                        "in": "query",
                        "description": "The bool flag to include links in the result (default true).",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The organization list.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Organization"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Organization"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Organization"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{OrgId}/rx/importjob": {
            "post": {
                "tags": [
                    "Prescriptions"
                ],
                "summary": "Initiates Prescription Import",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FieldZoneImportJobRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FieldZoneImportJobRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/FieldZoneImportJobRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The jobID that can be used to check the status of prescription import",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/FieldZoneImportResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FieldZoneImportResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FieldZoneImportResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{OrgId}/rx/importjob/{jobId}": {
            "patch": {
                "tags": [
                    "Prescriptions"
                ],
                "summary": "Uploads the zip file for the prescription import",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "jobId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            },
            "get": {
                "tags": [
                    "Prescriptions"
                ],
                "summary": "Gets the details of the prescription import by Id",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "jobId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The details of the prescription import.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/FieldZoneImportJobResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FieldZoneImportJobResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FieldZoneImportJobResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{OrgId}/purchases": {
            "get": {
                "tags": [
                    "Purchase"
                ],
                "summary": "Gets a list of inventory purchases for the organization.",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "materialType",
                        "in": "query",
                        "schema": {
                            "$ref": "#/components/schemas/MaterialTypeEnum"
                        }
                    },
                    {
                        "name": "cropYear",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The purchase list.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Purchase"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Purchase"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Purchase"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{OrgId}/purchases/{id}": {
            "get": {
                "tags": [
                    "Purchase"
                ],
                "summary": "Gets purchase record by Id for the organization.",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The purchase record by Id.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Purchase"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Purchase"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Purchase"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/units/materialpurchase/{form}": {
            "get": {
                "tags": [
                    "Units"
                ],
                "summary": "Gets a list of Units for the Material Purchased.",
                "parameters": [
                    {
                        "name": "form",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/MaterialFormEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Material Purchase Units list.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Unit"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Unit"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Unit"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/units/materialapplied/{form}": {
            "get": {
                "tags": [
                    "Units"
                ],
                "summary": "Gets a list of Units for the Material Applied.",
                "parameters": [
                    {
                        "name": "form",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/MaterialFormEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Material Applied Units list.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Unit"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Unit"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Unit"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/units/contract": {
            "get": {
                "tags": [
                    "Units"
                ],
                "summary": "Gets a list of Units for the Contract.",
                "responses": {
                    "200": {
                        "description": "The Contract Units list.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Unit"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Unit"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Unit"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/units/layersensors": {
            "get": {
                "tags": [
                    "Units"
                ],
                "summary": "Gets a list of Units for the Layer Sensors.",
                "responses": {
                    "200": {
                        "description": "The Layer Sensors Units list.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Unit"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Unit"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Unit"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{OrgId}/vehicles": {
            "get": {
                "tags": [
                    "Vehicles"
                ],
                "summary": "Gets a list of vehicles for the organization.",
                "operationId": "GetVehicles",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "includeLinks",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The vehicle list.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Vehicle"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Vehicle"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Vehicle"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Vehicles"
                ],
                "summary": "Creates vehicle for the organization.",
                "operationId": "CreateVehicle",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "includeLinks",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpsertVehicle"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpsertVehicle"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpsertVehicle"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The vehicleId.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "integer",
                                    "format": "int64"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "format": "int64"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "integer",
                                    "format": "int64"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{OrgId}/vehicles/{id}": {
            "get": {
                "tags": [
                    "Vehicles"
                ],
                "summary": "Gets a vehicle by Id for the organization.",
                "operationId": "GetVehicle",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "includeLinks",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The vehicle.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Vehicle"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Vehicle"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Vehicle"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Vehicles"
                ],
                "summary": "Updates the vehicle",
                "operationId": "UpdateVehicle",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpsertVehicle"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpsertVehicle"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpsertVehicle"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/{OrgId}/vehicles/{id}/retire": {
            "patch": {
                "tags": [
                    "Vehicles"
                ],
                "summary": "Retires the vehicle from the Organization",
                "operationId": "RetireVehicle",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "description": "The OrgId",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The vehicleId",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/{OrgId}/vehicles/{id}/unretire": {
            "patch": {
                "tags": [
                    "Vehicles"
                ],
                "summary": "Unretires the vehicle from the Organization",
                "operationId": "UnretireVehicle",
                "parameters": [
                    {
                        "name": "OrgId",
                        "in": "path",
                        "description": "The OrgId",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The VehicleId",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/vehicletypes": {
            "get": {
                "tags": [
                    "VehicleTypes"
                ],
                "summary": "Gets a list of Vehicle types",
                "operationId": "GetVehicleTypes",
                "responses": {
                    "200": {
                        "description": "The vehicle types list.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/VehicleType"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/VehicleType"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/VehicleType"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "security": null,
    "schema": null,
    "components": {
        "schemas": {
            "Balance": {
                "type": "object",
                "properties": {
                    "materialId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "material": {
                        "type": "string",
                        "nullable": true
                    },
                    "materialType": {
                        "$ref": "#/components/schemas/MaterialTypeEnum"
                    },
                    "cropYear": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "quantityPurchased": {
                        "type": "number",
                        "format": "double"
                    },
                    "unit": {
                        "type": "string",
                        "nullable": true
                    },
                    "costPurchased": {
                        "type": "number",
                        "format": "double"
                    },
                    "appliedArea": {
                        "type": "number",
                        "format": "double"
                    },
                    "quantityUsed": {
                        "type": "number",
                        "format": "double"
                    },
                    "costUsed": {
                        "type": "number",
                        "format": "double"
                    }
                },
                "additionalProperties": false
            },
            "BlendOrderEnum": {
                "type": "string"
            },
            "Boundary": {
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "fieldId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "maxLength": 50,
                        "minLength": 0,
                        "pattern": "^[^/\\\\:*<>|.\"]+$",
                        "type": "string"
                    },
                    "geometry": {
                        "$ref": "#/components/schemas/Geometry"
                    },
                    "isRetired": {
                        "type": "boolean"
                    },
                    "links": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Link"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "BoundarySummary": {
                "type": "object",
                "properties": {
                    "links": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Link"
                        },
                        "nullable": true
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "fieldId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "isRetired": {
                        "type": "boolean"
                    }
                },
                "additionalProperties": false
            },
            "Client": {
                "type": "object",
                "properties": {
                    "links": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Link"
                        },
                        "nullable": true
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "isRetired": {
                        "type": "boolean"
                    },
                    "updateUtc": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "additionalProperties": false
            },
            "Contact": {
                "type": "object",
                "properties": {
                    "links": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Link"
                        },
                        "nullable": true
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "firstName": {
                        "type": "string",
                        "nullable": true
                    },
                    "lastName": {
                        "type": "string",
                        "nullable": true
                    },
                    "isOperator": {
                        "type": "boolean"
                    },
                    "isDisplayLogin": {
                        "type": "boolean"
                    }
                },
                "additionalProperties": false
            },
            "ContactDetail": {
                "type": "object",
                "properties": {
                    "links": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Link"
                        },
                        "nullable": true
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "firstName": {
                        "type": "string",
                        "nullable": true
                    },
                    "lastName": {
                        "type": "string",
                        "nullable": true
                    },
                    "isOperator": {
                        "type": "boolean"
                    },
                    "jobTitle": {
                        "type": "string",
                        "nullable": true
                    },
                    "email": {
                        "type": "string",
                        "nullable": true
                    },
                    "homePhone": {
                        "type": "string",
                        "nullable": true
                    },
                    "workPhone": {
                        "type": "string",
                        "nullable": true
                    },
                    "mobilePhone": {
                        "type": "string",
                        "nullable": true
                    },
                    "fax": {
                        "type": "string",
                        "nullable": true
                    },
                    "operatorLicence": {
                        "type": "string",
                        "nullable": true
                    },
                    "unitCost": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "operatorGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OperatorGroup"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "ContactSummary": {
                "type": "object",
                "properties": {
                    "links": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Link"
                        },
                        "nullable": true
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Coordinate": {
                "type": "object",
                "properties": {
                    "x": {
                        "type": "number",
                        "format": "double"
                    },
                    "y": {
                        "type": "number",
                        "format": "double"
                    },
                    "z": {
                        "type": "number",
                        "format": "double"
                    },
                    "m": {
                        "type": "number",
                        "format": "double"
                    },
                    "coordinateValue": {
                        "$ref": "#/components/schemas/Coordinate"
                    }
                },
                "additionalProperties": false
            },
            "CoordinateSequence": {
                "type": "object",
                "properties": {
                    "dimension": {
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true
                    },
                    "measures": {
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true
                    },
                    "spatial": {
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true
                    },
                    "ordinates": {
                        "$ref": "#/components/schemas/Ordinates"
                    },
                    "hasZ": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "hasM": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "zOrdinateIndex": {
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true
                    },
                    "mOrdinateIndex": {
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true
                    },
                    "count": {
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "CoordinateSequenceFactory": {
                "type": "object",
                "properties": {
                    "ordinates": {
                        "$ref": "#/components/schemas/Ordinates"
                    }
                },
                "additionalProperties": false
            },
            "CreateContact": {
                "type": "object",
                "properties": {
                    "firstName": {
                        "type": "string",
                        "nullable": true
                    },
                    "lastName": {
                        "type": "string",
                        "nullable": true
                    },
                    "jobTitle": {
                        "type": "string",
                        "nullable": true
                    },
                    "homePhone": {
                        "type": "string",
                        "nullable": true
                    },
                    "workPhone": {
                        "type": "string",
                        "nullable": true
                    },
                    "mobilePhone": {
                        "type": "string",
                        "nullable": true
                    },
                    "fax": {
                        "type": "string",
                        "nullable": true
                    },
                    "isOperator": {
                        "type": "boolean"
                    },
                    "operatorLicence": {
                        "type": "string",
                        "nullable": true
                    },
                    "unitCost": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "CreateCropSeason": {
                "type": "object",
                "properties": {
                    "cropYear": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "masterCropId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "startUtc": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "endUtc": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "subCrop": {
                        "type": "string",
                        "nullable": true
                    },
                    "sequence": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "CreateManagementZoneRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "maxLength": 50,
                        "minLength": 0,
                        "type": "string",
                        "nullable": true
                    },
                    "fieldId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "isNutrientZone": {
                        "type": "boolean"
                    },
                    "cropZoneId": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "additionalProperties": false
            },
            "CreateMaterial": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "type": {
                        "$ref": "#/components/schemas/MaterialTypeEnum"
                    },
                    "form": {
                        "$ref": "#/components/schemas/MaterialFormEnum"
                    },
                    "purchasedUnit": {
                        "type": "string",
                        "nullable": true
                    },
                    "appliedUnit": {
                        "type": "string",
                        "nullable": true
                    },
                    "conversionFactor": {
                        "type": "number",
                        "format": "double"
                    },
                    "defaultTargetRate": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "alternateTargetRate": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "rateIncrement": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "minimumRate": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "maximumRate": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "subType": {
                        "$ref": "#/components/schemas/MaterialSubTypeEnum"
                    },
                    "manufacturer": {
                        "type": "string",
                        "nullable": true
                    },
                    "notes": {
                        "type": "string",
                        "nullable": true
                    },
                    "cropId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "seedTrait": {
                        "type": "string",
                        "nullable": true
                    },
                    "seedTreatment": {
                        "type": "string",
                        "nullable": true
                    },
                    "passingMeshSize10": {
                        "maximum": 100,
                        "minimum": 0,
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "passingMeshSize50": {
                        "maximum": 100,
                        "minimum": 0,
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "purity": {
                        "maximum": 199,
                        "minimum": 0,
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "density": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "reEntryInterval": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "preHarvestInterval": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MaterialPreHarvestInterval"
                        },
                        "nullable": true
                    },
                    "nutrients": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MaterialNutrient"
                        },
                        "nullable": true
                    },
                    "nutrientDriver": {
                        "$ref": "#/components/schemas/NutrientEnum"
                    },
                    "blendOrder": {
                        "$ref": "#/components/schemas/BlendOrderEnum"
                    }
                },
                "additionalProperties": false
            },
            "CreateOperatorGroup": {
                "type": "object",
                "properties": {
                    "name": {
                        "maxLength": 50,
                        "minLength": 0,
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "CropSeason": {
                "type": "object",
                "properties": {
                    "links": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Link"
                        },
                        "nullable": true
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "cropYear": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "masterCropId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "startUtc": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "endUtc": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "subCrop": {
                        "type": "string",
                        "nullable": true
                    },
                    "sequence": {
                        "type": "string",
                        "nullable": true
                    },
                    "updateUtc": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "additionalProperties": false
            },
            "CropZone": {
                "required": [
                    "cropSeasonId",
                    "cropSequence",
                    "cropYear",
                    "fieldId"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "fieldId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "updateUtc": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "area": {
                        "type": "number",
                        "format": "double"
                    },
                    "cropSeasonId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "cropYear": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "cropSequence": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "description": {
                        "maxLength": 50,
                        "pattern": "^[^/\\\\:*<>|.\"]+$",
                        "type": "string",
                        "nullable": true
                    },
                    "color": {
                        "maxLength": 50,
                        "pattern": "^[^/\\\\:*<>|.\"]+$",
                        "type": "string",
                        "nullable": true
                    },
                    "isIrrigated": {
                        "type": "boolean"
                    },
                    "isPerennialCrop": {
                        "type": "boolean"
                    },
                    "isFinalSeason": {
                        "type": "boolean"
                    },
                    "seasonNumber": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "CropZoneActivity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "cropZoneId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "operationTypeId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "operationType": {
                        "type": "string",
                        "nullable": true
                    },
                    "operationSubTypeId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "operationSubType": {
                        "type": "string",
                        "nullable": true
                    },
                    "workOrderId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "equipmentActivityId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "updateUtc": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "additionalProperties": false
            },
            "CropZoneActivityDetail": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "cropZoneId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "operationTypeId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "operationType": {
                        "type": "string",
                        "nullable": true
                    },
                    "operationSubTypeId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "operationSubType": {
                        "type": "string",
                        "nullable": true
                    },
                    "workOrderId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "equipmentActivityId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "updateUtc": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "sessions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CropZoneActivitySession"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "CropZoneActivitySession": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "sessionId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "startUtc": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "endUtc": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "duration": {
                        "type": "number",
                        "format": "double"
                    },
                    "area": {
                        "type": "number",
                        "format": "double"
                    },
                    "notes": {
                        "type": "string",
                        "nullable": true
                    },
                    "crew": {
                        "type": "string",
                        "nullable": true
                    },
                    "locked": {
                        "type": "boolean"
                    },
                    "vehicles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CropZoneACtivitySessionVehicle"
                        },
                        "nullable": true
                    },
                    "implements": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CropZoneActivitySessionImplement"
                        },
                        "nullable": true
                    },
                    "contacts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CropZoneActivitySessionContact"
                        },
                        "nullable": true
                    },
                    "materials": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CropZoneActivitySessionMaterial"
                        },
                        "nullable": true
                    },
                    "conditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CropZoneActivitySessionCondition"
                        },
                        "nullable": true
                    },
                    "harvests": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CropZoneActivitySessionHarvest"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "CropZoneActivitySessionCondition": {
                "type": "object",
                "properties": {
                    "recordedUtc": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "windDirection": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "windSpeed": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "windGustSpeed": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "skyConditions": {
                        "type": "string",
                        "nullable": true
                    },
                    "temperature": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "humidity": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "soilConditions": {
                        "type": "string",
                        "nullable": true
                    },
                    "soilType": {
                        "type": "string",
                        "nullable": true
                    },
                    "growthStage": {
                        "type": "string",
                        "nullable": true
                    },
                    "applicationMethod": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "CropZoneActivitySessionContact": {
                "type": "object",
                "properties": {
                    "contactId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "duration": {
                        "type": "number",
                        "format": "double"
                    },
                    "totalCost": {
                        "type": "number",
                        "format": "double"
                    }
                },
                "additionalProperties": false
            },
            "CropZoneActivitySessionHarvest": {
                "type": "object",
                "properties": {
                    "masterCommodityId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "masterCommodity": {
                        "type": "string",
                        "nullable": true
                    },
                    "quantity": {
                        "type": "number",
                        "format": "double"
                    },
                    "quantityUnit": {
                        "type": "string",
                        "nullable": true
                    },
                    "moisture": {
                        "type": "number",
                        "format": "double"
                    },
                    "unitPrice": {
                        "type": "number",
                        "format": "double"
                    },
                    "totalIncome": {
                        "type": "number",
                        "format": "double"
                    }
                },
                "additionalProperties": false
            },
            "CropZoneActivitySessionImplement": {
                "type": "object",
                "properties": {
                    "implementId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "implement": {
                        "type": "string",
                        "nullable": true
                    },
                    "area": {
                        "type": "number",
                        "format": "double"
                    },
                    "totalCost": {
                        "type": "number",
                        "format": "double"
                    }
                },
                "additionalProperties": false
            },
            "CropZoneActivitySessionMaterial": {
                "type": "object",
                "properties": {
                    "materialId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "material": {
                        "type": "string",
                        "nullable": true
                    },
                    "quantity": {
                        "type": "number",
                        "format": "double"
                    },
                    "quantityUnit": {
                        "type": "string",
                        "nullable": true
                    },
                    "targetRate": {
                        "type": "number",
                        "format": "double"
                    },
                    "targetRateUnit": {
                        "type": "string",
                        "nullable": true
                    },
                    "area": {
                        "type": "number",
                        "format": "double"
                    },
                    "totalCost": {
                        "type": "number",
                        "format": "double"
                    },
                    "purchasedQuantity": {
                        "type": "number",
                        "format": "double"
                    },
                    "purchasedQuantityUnit": {
                        "type": "string",
                        "nullable": true
                    },
                    "appliedRate": {
                        "type": "number",
                        "format": "double"
                    },
                    "appliedRateUnit": {
                        "type": "string",
                        "nullable": true
                    },
                    "tankMixId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "tankMix": {
                        "type": "string",
                        "nullable": true
                    },
                    "prescriptionId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "reentryInterval": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "reentryIntervalUnit": {
                        "type": "string",
                        "nullable": true
                    },
                    "preHarvestInterval": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "preHarvestIntervalUnit": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "CropZoneACtivitySessionVehicle": {
                "type": "object",
                "properties": {
                    "vehicleId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "vehicle": {
                        "type": "string",
                        "nullable": true
                    },
                    "duration": {
                        "type": "number",
                        "format": "double"
                    },
                    "area": {
                        "type": "number",
                        "format": "double"
                    },
                    "totalCost": {
                        "type": "number",
                        "format": "double"
                    }
                },
                "additionalProperties": false
            },
            "CropZoneExtent": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "fieldId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "boundary": {
                        "$ref": "#/components/schemas/Geometry"
                    }
                },
                "additionalProperties": false
            },
            "DataCenterJobStatus": {
                "type": "string"
            },
            "Device": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "serialNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "type": {
                        "type": "string",
                        "nullable": true
                    },
                    "model": {
                        "type": "string",
                        "nullable": true
                    },
                    "vehicleId": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "vehicle": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Dimension": {
                "type": "string"
            },
            "Envelope": {
                "type": "object",
                "properties": {
                    "isNull": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "width": {
                        "type": "number",
                        "format": "double",
                        "readOnly": true
                    },
                    "height": {
                        "type": "number",
                        "format": "double",
                        "readOnly": true
                    },
                    "diameter": {
                        "type": "number",
                        "format": "double",
                        "readOnly": true
                    },
                    "minX": {
                        "type": "number",
                        "format": "double",
                        "readOnly": true
                    },
                    "maxX": {
                        "type": "number",
                        "format": "double",
                        "readOnly": true
                    },
                    "minY": {
                        "type": "number",
                        "format": "double",
                        "readOnly": true
                    },
                    "maxY": {
                        "type": "number",
                        "format": "double",
                        "readOnly": true
                    },
                    "area": {
                        "type": "number",
                        "format": "double",
                        "readOnly": true
                    },
                    "minExtent": {
                        "type": "number",
                        "format": "double",
                        "readOnly": true
                    },
                    "maxExtent": {
                        "type": "number",
                        "format": "double",
                        "readOnly": true
                    },
                    "centre": {
                        "$ref": "#/components/schemas/Coordinate"
                    }
                },
                "additionalProperties": false
            },
            "EquipmentActivity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "cropZoneId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "operationTypeId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "operationType": {
                        "type": "string",
                        "nullable": true
                    },
                    "operationSubTypeId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "operationSubType": {
                        "type": "string",
                        "nullable": true
                    },
                    "isVerified": {
                        "type": "boolean"
                    },
                    "updateUtc": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "additionalProperties": false
            },
            "EquipmentActivityDetail": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "cropZoneId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "operationTypeId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "operationSubTypeId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "isVerified": {
                        "type": "boolean"
                    },
                    "updateUtc": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "sessions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EquipmentActivitySession"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "EquipmentActivitySession": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "startUtc": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "endUtc": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "duration": {
                        "type": "number",
                        "format": "double"
                    },
                    "area": {
                        "type": "number",
                        "format": "double"
                    },
                    "updateUtc": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "unitCost": {
                        "type": "number",
                        "format": "double"
                    },
                    "totalCost": {
                        "type": "number",
                        "format": "double"
                    },
                    "vehicles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EquipmentActivitySessionVehicle"
                        },
                        "nullable": true
                    },
                    "implements": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EquipmentActivitySessionImplement"
                        },
                        "nullable": true
                    },
                    "contacts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EquipmentActivitySessionContact"
                        },
                        "nullable": true
                    },
                    "materials": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EquipmentActivitySessionMaterial"
                        },
                        "nullable": true
                    },
                    "conditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EquipmentActivitySessionCondition"
                        },
                        "nullable": true
                    },
                    "harvests": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EquipmentActivitySessionHarvest"
                        },
                        "nullable": true
                    },
                    "tankMixes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EquipmentActivitySessionTankMix"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "EquipmentActivitySessionCondition": {
                "type": "object",
                "properties": {
                    "recordedUtc": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "windDirection": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "windSpeed": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "windGustSpeed": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "skyConditions": {
                        "type": "string",
                        "nullable": true
                    },
                    "temperature": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "humidity": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "soilConditions": {
                        "type": "string",
                        "nullable": true
                    },
                    "soilType": {
                        "type": "string",
                        "nullable": true
                    },
                    "growthStage": {
                        "type": "string",
                        "nullable": true
                    },
                    "applicationMethod": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "EquipmentActivitySessionContact": {
                "type": "object",
                "properties": {
                    "contactId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "duration": {
                        "type": "number",
                        "format": "double"
                    },
                    "totalCost": {
                        "type": "number",
                        "format": "double"
                    },
                    "contact": {
                        "type": "string",
                        "nullable": true
                    },
                    "unitCost": {
                        "type": "number",
                        "format": "double"
                    }
                },
                "additionalProperties": false
            },
            "EquipmentActivitySessionHarvest": {
                "type": "object",
                "properties": {
                    "masterCommodityId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "masterCommodity": {
                        "type": "string",
                        "nullable": true
                    },
                    "quantity": {
                        "type": "number",
                        "format": "double"
                    },
                    "quantityUnit": {
                        "type": "string",
                        "nullable": true
                    },
                    "moisture": {
                        "type": "number",
                        "format": "double"
                    },
                    "unitPrice": {
                        "type": "number",
                        "format": "double"
                    },
                    "totalIncome": {
                        "type": "number",
                        "format": "double"
                    }
                },
                "additionalProperties": false
            },
            "EquipmentActivitySessionImplement": {
                "type": "object",
                "properties": {
                    "implementId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "implement": {
                        "type": "string",
                        "nullable": true
                    },
                    "area": {
                        "type": "number",
                        "format": "double"
                    },
                    "totalCost": {
                        "type": "number",
                        "format": "double"
                    },
                    "unitCost": {
                        "type": "number",
                        "format": "double"
                    }
                },
                "additionalProperties": false
            },
            "EquipmentActivitySessionMaterial": {
                "type": "object",
                "properties": {
                    "materialId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "material": {
                        "type": "string",
                        "nullable": true
                    },
                    "quantity": {
                        "type": "number",
                        "format": "double"
                    },
                    "quantityUnit": {
                        "type": "string",
                        "nullable": true
                    },
                    "targetRate": {
                        "type": "number",
                        "format": "double"
                    },
                    "targetRateUnit": {
                        "type": "string",
                        "nullable": true
                    },
                    "area": {
                        "type": "number",
                        "format": "double"
                    },
                    "totalCost": {
                        "type": "number",
                        "format": "double"
                    },
                    "unitCost": {
                        "type": "number",
                        "format": "double"
                    }
                },
                "additionalProperties": false
            },
            "EquipmentActivitySessionTankMix": {
                "type": "object",
                "properties": {
                    "tankMixId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "tankMix": {
                        "type": "string",
                        "nullable": true
                    },
                    "carrier": {
                        "type": "string",
                        "nullable": true
                    },
                    "quantity": {
                        "type": "number",
                        "format": "double"
                    },
                    "quantityUnit": {
                        "type": "string",
                        "nullable": true
                    },
                    "targetRate": {
                        "type": "number",
                        "format": "double"
                    },
                    "targetRateUnit": {
                        "type": "string",
                        "nullable": true
                    },
                    "prescriptionId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "EquipmentActivitySessionVehicle": {
                "type": "object",
                "properties": {
                    "vehicleId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "vehicle": {
                        "type": "string",
                        "nullable": true
                    },
                    "duration": {
                        "type": "number",
                        "format": "double"
                    },
                    "area": {
                        "type": "number",
                        "format": "double"
                    },
                    "totalCost": {
                        "type": "number",
                        "format": "double"
                    },
                    "unitCost": {
                        "type": "number",
                        "format": "double"
                    },
                    "chargeByArea": {
                        "type": "boolean"
                    }
                },
                "additionalProperties": false
            },
            "EquipmentGroup": {
                "type": "object",
                "properties": {
                    "links": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Link"
                        },
                        "nullable": true
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "EquipmentManufacturer": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Extent": {
                "type": "object",
                "properties": {
                    "minLongitude": {
                        "type": "number",
                        "format": "double"
                    },
                    "minLatitude": {
                        "type": "number",
                        "format": "double"
                    },
                    "maxLongitude": {
                        "type": "number",
                        "format": "double"
                    },
                    "maxLatitude": {
                        "type": "number",
                        "format": "double"
                    }
                },
                "additionalProperties": false
            },
            "Field": {
                "type": "object",
                "properties": {
                    "links": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Link"
                        },
                        "nullable": true
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "OrgId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "farmId": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "isRetired": {
                        "type": "boolean"
                    },
                    "area": {
                        "type": "number",
                        "format": "double"
                    },
                    "origin": {
                        "type": "string",
                        "nullable": true
                    },
                    "updateUtc": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "additionalProperties": false
            },
            "FieldExtent": {
                "type": "object",
                "properties": {
                    "geography": {
                        "$ref": "#/components/schemas/Geometry"
                    },
                    "links": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Link"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "FieldZoneFileInfo": {
                "type": "object",
                "properties": {
                    "rxName": {
                        "type": "string",
                        "nullable": true
                    },
                    "rxId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "errorCode": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "FieldZoneImportJobRequest": {
                "required": [
                    "fileName",
                    "rateColumn",
                    "rateUnit"
                ],
                "type": "object",
                "properties": {
                    "fileName": {
                        "type": "string"
                    },
                    "rateColumn": {
                        "type": "string"
                    },
                    "rateUnit": {
                        "$ref": "#/components/schemas/RateUnits"
                    },
                    "deviceIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "FieldZoneImportJobResponse": {
                "type": "object",
                "properties": {
                    "jobId": {
                        "type": "string",
                        "nullable": true
                    },
                    "status": {
                        "$ref": "#/components/schemas/DataCenterJobStatus"
                    },
                    "rxFileInfo": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FieldZoneFileInfo"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "FieldZoneImportResponse": {
                "type": "object",
                "properties": {
                    "jobId": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Geometry": {
                "type": "object",
                "properties": {
                    "factory": {
                        "$ref": "#/components/schemas/GeometryFactory"
                    },
                    "userData": {
                        "nullable": true
                    },
                    "srid": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "geometryType": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    },
                    "ogcGeometryType": {
                        "$ref": "#/components/schemas/OgcGeometryType"
                    },
                    "precisionModel": {
                        "$ref": "#/components/schemas/PrecisionModel"
                    },
                    "coordinate": {
                        "$ref": "#/components/schemas/Coordinate"
                    },
                    "coordinates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Coordinate"
                        },
                        "nullable": true,
                        "readOnly": true
                    },
                    "numPoints": {
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true
                    },
                    "numGeometries": {
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true
                    },
                    "isSimple": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "isValid": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "isEmpty": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "area": {
                        "type": "number",
                        "format": "double",
                        "readOnly": true
                    },
                    "length": {
                        "type": "number",
                        "format": "double",
                        "readOnly": true
                    },
                    "centroid": {
                        "$ref": "#/components/schemas/Point"
                    },
                    "interiorPoint": {
                        "$ref": "#/components/schemas/Point"
                    },
                    "pointOnSurface": {
                        "$ref": "#/components/schemas/Point"
                    },
                    "dimension": {
                        "$ref": "#/components/schemas/Dimension"
                    },
                    "boundary": {
                        "$ref": "#/components/schemas/Geometry"
                    },
                    "boundaryDimension": {
                        "$ref": "#/components/schemas/Dimension"
                    },
                    "envelope": {
                        "$ref": "#/components/schemas/Geometry"
                    },
                    "envelopeInternal": {
                        "$ref": "#/components/schemas/Envelope"
                    },
                    "isRectangle": {
                        "type": "boolean",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "GeometryFactory": {
                "type": "object",
                "properties": {
                    "precisionModel": {
                        "$ref": "#/components/schemas/PrecisionModel"
                    },
                    "coordinateSequenceFactory": {
                        "$ref": "#/components/schemas/CoordinateSequenceFactory"
                    },
                    "srid": {
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "GuidanceSummary": {
                "type": "object",
                "properties": {
                    "links": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Link"
                        },
                        "nullable": true
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "updatedUtc": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "additionalProperties": false
            },
            "Implement": {
                "type": "object",
                "properties": {
                    "links": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Link"
                        },
                        "nullable": true
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "operationTypeId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "operationType": {
                        "type": "string",
                        "nullable": true
                    },
                    "operationSubTypeId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "operationSubType": {
                        "type": "string",
                        "nullable": true
                    },
                    "equipmentGroupId": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "equipmentGroup": {
                        "type": "string",
                        "nullable": true
                    },
                    "unitCost": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "isRetired": {
                        "type": "boolean"
                    }
                },
                "additionalProperties": false
            },
            "Int64IdResult": {
                "type": "object",
                "properties": {
                    "links": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Link"
                        },
                        "nullable": true
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "additionalProperties": false
            },
            "LandmarkSummary": {
                "type": "object",
                "properties": {
                    "links": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Link"
                        },
                        "nullable": true
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "fieldId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "updatedUtc": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "additionalProperties": false
            },
            "Layer": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "layerType": {
                        "$ref": "#/components/schemas/LayerType"
                    },
                    "boundingRect": {
                        "$ref": "#/components/schemas/Extent"
                    }
                },
                "additionalProperties": false
            },
            "LayerSample": {
                "type": "object",
                "properties": {
                    "sessionId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "geometry": {
                        "$ref": "#/components/schemas/Geometry"
                    },
                    "sensorValues": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SensorValue"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "LayerSensor": {
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string",
                        "nullable": true
                    },
                    "type": {
                        "$ref": "#/components/schemas/TAFMSensorType"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "units": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "LayerType": {
                "type": "string"
            },
            "Link": {
                "type": "object",
                "properties": {
                    "href": {
                        "type": "string",
                        "nullable": true
                    },
                    "rel": {
                        "type": "string",
                        "nullable": true
                    },
                    "method": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "ManagementZone": {
                "type": "object",
                "properties": {
                    "links": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Link"
                        },
                        "nullable": true
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "fieldId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "cropYear": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "isNutrientZone": {
                        "type": "boolean"
                    }
                },
                "additionalProperties": false
            },
            "ManagementZoneDetail": {
                "type": "object",
                "properties": {
                    "links": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Link"
                        },
                        "nullable": true
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "zoneName": {
                        "type": "string",
                        "nullable": true
                    },
                    "zoneCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "cropYear": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "color": {
                        "type": "string",
                        "nullable": true
                    },
                    "geometry": {
                        "$ref": "#/components/schemas/Geometry"
                    }
                },
                "additionalProperties": false
            },
            "MasterCrop": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Material": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "type": {
                        "$ref": "#/components/schemas/MaterialTypeEnum"
                    },
                    "isRetired": {
                        "type": "boolean"
                    },
                    "updateUtc": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "additionalProperties": false
            },
            "MaterialDetail": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "type": {
                        "$ref": "#/components/schemas/MaterialTypeEnum"
                    },
                    "form": {
                        "$ref": "#/components/schemas/MaterialFormEnum"
                    },
                    "purchasedUnit": {
                        "type": "string",
                        "nullable": true
                    },
                    "appliedUnit": {
                        "type": "string",
                        "nullable": true
                    },
                    "conversionFactor": {
                        "type": "number",
                        "format": "double"
                    },
                    "unitCost": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "defaultTargetRate": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "defaultTargetRateUnit": {
                        "type": "string",
                        "nullable": true
                    },
                    "alternateTargetRate": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "alternateTargetRateUnit": {
                        "type": "string",
                        "nullable": true
                    },
                    "rateIncrement": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "rateIncrementUnit": {
                        "type": "string",
                        "nullable": true
                    },
                    "minimumRate": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "minimumRateUnit": {
                        "type": "string",
                        "nullable": true
                    },
                    "maximumRate": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "maximumRateUnit": {
                        "type": "string",
                        "nullable": true
                    },
                    "manufacturer": {
                        "type": "string",
                        "nullable": true
                    },
                    "notes": {
                        "type": "string",
                        "nullable": true
                    },
                    "nutrientDriver": {
                        "$ref": "#/components/schemas/NutrientEnum"
                    },
                    "blendOrder": {
                        "$ref": "#/components/schemas/BlendOrderEnum"
                    },
                    "isRetired": {
                        "type": "boolean"
                    },
                    "updateUtc": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "additionalProperties": false
            },
            "MaterialFormEnum": {
                "type": "string"
            },
            "MaterialNutrient": {
                "type": "object",
                "properties": {
                    "name": {
                        "$ref": "#/components/schemas/NutrientEnum"
                    },
                    "percentage": {
                        "maximum": 100,
                        "minimum": 0,
                        "type": "number",
                        "format": "double"
                    }
                },
                "additionalProperties": false
            },
            "MaterialPreHarvestInterval": {
                "type": "object",
                "properties": {
                    "cropId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "preHarvestInterval": {
                        "type": "number",
                        "format": "double"
                    }
                },
                "additionalProperties": false
            },
            "MaterialSubTypeEnum": {
                "type": "string"
            },
            "MaterialTypeEnum": {
                "type": "string"
            },
            "NutrientEnum": {
                "type": "string"
            },
            "OgcGeometryType": {
                "type": "string"
            },
            "OperationSubType": {
                "type": "object",
                "properties": {
                    "links": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Link"
                        },
                        "nullable": true
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "operationTypeId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "operationType": {
                        "type": "string",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "OperationType": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "OperatorGroup": {
                "type": "object",
                "properties": {
                    "links": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Link"
                        },
                        "nullable": true
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "maxLength": 50,
                        "minLength": 0,
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Ordinates": {
                "type": "string"
            },
            "Organization": {
                "type": "object",
                "properties": {
                    "links": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Link"
                        },
                        "nullable": true
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "timezoneName": {
                        "type": "string",
                        "nullable": true
                    },
                    "currencyCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "isMetric": {
                        "type": "boolean"
                    }
                },
                "additionalProperties": false
            },
            "PatternType": {
                "type": "string"
            },
            "Point": {
                "type": "object",
                "properties": {
                    "factory": {
                        "$ref": "#/components/schemas/GeometryFactory"
                    },
                    "userData": {
                        "nullable": true
                    },
                    "srid": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "precisionModel": {
                        "$ref": "#/components/schemas/PrecisionModel"
                    },
                    "numGeometries": {
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true
                    },
                    "isSimple": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "isValid": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "area": {
                        "type": "number",
                        "format": "double",
                        "readOnly": true
                    },
                    "length": {
                        "type": "number",
                        "format": "double",
                        "readOnly": true
                    },
                    "centroid": {
                        "$ref": "#/components/schemas/Point"
                    },
                    "interiorPoint": {
                        "$ref": "#/components/schemas/Point"
                    },
                    "pointOnSurface": {
                        "$ref": "#/components/schemas/Point"
                    },
                    "envelope": {
                        "$ref": "#/components/schemas/Geometry"
                    },
                    "envelopeInternal": {
                        "$ref": "#/components/schemas/Envelope"
                    },
                    "isRectangle": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "coordinateSequence": {
                        "$ref": "#/components/schemas/CoordinateSequence"
                    },
                    "coordinates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Coordinate"
                        },
                        "nullable": true,
                        "readOnly": true
                    },
                    "numPoints": {
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true
                    },
                    "isEmpty": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "dimension": {
                        "$ref": "#/components/schemas/Dimension"
                    },
                    "boundaryDimension": {
                        "$ref": "#/components/schemas/Dimension"
                    },
                    "x": {
                        "type": "number",
                        "format": "double"
                    },
                    "y": {
                        "type": "number",
                        "format": "double"
                    },
                    "coordinate": {
                        "$ref": "#/components/schemas/Coordinate"
                    },
                    "geometryType": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    },
                    "ogcGeometryType": {
                        "$ref": "#/components/schemas/OgcGeometryType"
                    },
                    "boundary": {
                        "$ref": "#/components/schemas/Geometry"
                    },
                    "z": {
                        "type": "number",
                        "format": "double"
                    },
                    "m": {
                        "type": "number",
                        "format": "double"
                    }
                },
                "additionalProperties": false
            },
            "PrecisionModel": {
                "type": "object",
                "properties": {
                    "isFloating": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "maximumSignificantDigits": {
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true
                    },
                    "scale": {
                        "type": "number",
                        "format": "double"
                    },
                    "precisionModelType": {
                        "$ref": "#/components/schemas/PrecisionModels"
                    }
                },
                "additionalProperties": false
            },
            "PrecisionModels": {
                "type": "string"
            },
            "Purchase": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "cropYear": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "date": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "materialId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "material": {
                        "type": "string",
                        "nullable": true
                    },
                    "materialType": {
                        "$ref": "#/components/schemas/MaterialTypeEnum"
                    },
                    "unit": {
                        "type": "string",
                        "nullable": true
                    },
                    "quantity": {
                        "type": "number",
                        "format": "double"
                    },
                    "taxAmount": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "totalAmount": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "invoiceNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "vendor": {
                        "type": "string",
                        "nullable": true
                    },
                    "notes": {
                        "type": "string",
                        "nullable": true
                    },
                    "tagId": {
                        "type": "string",
                        "nullable": true
                    },
                    "lot": {
                        "type": "string",
                        "nullable": true
                    },
                    "source": {
                        "type": "string",
                        "nullable": true
                    },
                    "seedGermination": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "seedGerminationDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "seedWeight": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "seedWeightUnit": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "RateUnits": {
                "enum": [
                    "gal/ac",
                    "l/ha",
                    "lbs/ac",
                    "ton/ac",
                    "kg/ha",
                    "t/ha",
                    "S/ac",
                    "S/ha",
                    "kS/ac",
                    "kS/ha",
                    "lbs(N)/ac",
                    "kg(N)/ha"
                ],
                "type": "string"
            },
            "SensorValue": {
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string",
                        "nullable": true
                    },
                    "value": {
                        "type": "number",
                        "format": "double"
                    }
                },
                "additionalProperties": false
            },
            "TAFMSensorType": {
                "type": "string"
            },
            "Unit": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "domain": {
                        "$ref": "#/components/schemas/UnitDomainEnum"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "conversion": {
                        "type": "number",
                        "format": "double"
                    },
                    "offset": {
                        "type": "number",
                        "format": "double"
                    },
                    "conversionUnit": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "UnitDomainEnum": {
                "type": "string"
            },
            "UpdateContact": {
                "type": "object",
                "properties": {
                    "firstName": {
                        "type": "string",
                        "nullable": true
                    },
                    "lastName": {
                        "type": "string",
                        "nullable": true
                    },
                    "jobTitle": {
                        "type": "string",
                        "nullable": true
                    },
                    "homePhone": {
                        "type": "string",
                        "nullable": true
                    },
                    "workPhone": {
                        "type": "string",
                        "nullable": true
                    },
                    "mobilePhone": {
                        "type": "string",
                        "nullable": true
                    },
                    "fax": {
                        "type": "string",
                        "nullable": true
                    },
                    "isOperator": {
                        "type": "boolean"
                    },
                    "operatorLicence": {
                        "type": "string",
                        "nullable": true
                    },
                    "unitCost": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "UpdateCropSeasonRequest": {
                "type": "object",
                "properties": {
                    "startUtc": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "endUtc": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "additionalProperties": false
            },
            "UpdateCropZoneExtent": {
                "type": "object",
                "properties": {
                    "boundary": {
                        "$ref": "#/components/schemas/Geometry"
                    }
                },
                "additionalProperties": false
            },
            "UpdateCropZoneRequest": {
                "required": [
                    "color",
                    "cropSeasonId",
                    "description"
                ],
                "type": "object",
                "properties": {
                    "area": {
                        "type": "number",
                        "format": "double"
                    },
                    "cropSeasonId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "description": {
                        "maxLength": 50,
                        "pattern": "^[^/\\\\:*<>|.\"]+$",
                        "type": "string"
                    },
                    "color": {
                        "maxLength": 50,
                        "pattern": "^[^/\\\\:*<>|.\"]+$",
                        "type": "string"
                    },
                    "isIrrigated": {
                        "type": "boolean"
                    },
                    "isPerennialCrop": {
                        "type": "boolean"
                    },
                    "isFinalSeason": {
                        "type": "boolean"
                    },
                    "seasonNumber": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "UpdateFieldExtent": {
                "type": "object",
                "properties": {
                    "geography": {
                        "$ref": "#/components/schemas/Geometry"
                    }
                },
                "additionalProperties": false
            },
            "UpdateManagementZoneRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "maxLength": 50,
                        "minLength": 0,
                        "type": "string",
                        "nullable": true
                    },
                    "isNutrientZone": {
                        "type": "boolean"
                    }
                },
                "additionalProperties": false
            },
            "UpdateMaterial": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "type": {
                        "$ref": "#/components/schemas/MaterialTypeEnum"
                    },
                    "form": {
                        "$ref": "#/components/schemas/MaterialFormEnum"
                    },
                    "purchasedUnit": {
                        "type": "string",
                        "nullable": true
                    },
                    "appliedUnit": {
                        "type": "string",
                        "nullable": true
                    },
                    "conversionFactor": {
                        "type": "number",
                        "format": "double"
                    },
                    "defaultTargetRate": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "alternateTargetRate": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "rateIncrement": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "minimumRate": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "maximumRate": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "subType": {
                        "$ref": "#/components/schemas/MaterialSubTypeEnum"
                    },
                    "manufacturer": {
                        "type": "string",
                        "nullable": true
                    },
                    "notes": {
                        "type": "string",
                        "nullable": true
                    },
                    "cropId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "seedTrait": {
                        "type": "string",
                        "nullable": true
                    },
                    "seedTreatment": {
                        "type": "string",
                        "nullable": true
                    },
                    "passingMeshSize10": {
                        "maximum": 100,
                        "minimum": 0,
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "passingMeshSize50": {
                        "maximum": 100,
                        "minimum": 0,
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "purity": {
                        "maximum": 199,
                        "minimum": 0,
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "density": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "reEntryInterval": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "preHarvestInterval": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MaterialPreHarvestInterval"
                        },
                        "nullable": true
                    },
                    "nutrients": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MaterialNutrient"
                        },
                        "nullable": true
                    },
                    "nutrientDriver": {
                        "$ref": "#/components/schemas/NutrientEnum"
                    },
                    "blendOrder": {
                        "$ref": "#/components/schemas/BlendOrderEnum"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "additionalProperties": false
            },
            "UpsertBoundary": {
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "fieldId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "maxLength": 50,
                        "minLength": 0,
                        "pattern": "^[^/\\\\:*<>|.\"]+$",
                        "type": "string"
                    },
                    "geometry": {
                        "$ref": "#/components/schemas/Geometry"
                    },
                    "isRetired": {
                        "type": "boolean"
                    }
                },
                "additionalProperties": false
            },
            "UpsertClientRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "maxLength": 50,
                        "minLength": 0,
                        "pattern": "^[^/\\\\:*<>|.\"]+$",
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "UpsertEquipmentGroupRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "maxLength": 50,
                        "minLength": 0,
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "UpsertFarm": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "maxLength": 50,
                        "pattern": "^[^/\\\\:*<>|.\"]+$",
                        "type": "string",
                        "nullable": true
                    },
                    "clientId": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "isRetired": {
                        "type": "boolean"
                    },
                    "updateUtc": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "additionalProperties": false
            },
            "UpsertFieldRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "maxLength": 50,
                        "minLength": 0,
                        "pattern": "^[^/\\\\:*<>|.\"]+$",
                        "type": "string",
                        "nullable": true
                    },
                    "farmId": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "area": {
                        "type": "number",
                        "format": "double"
                    }
                },
                "additionalProperties": false
            },
            "UpsertGuidancePattern": {
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "OrgId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "fieldId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "maxLength": 50,
                        "minLength": 0,
                        "pattern": "^[^/\\\\:*<>|.\"]+$",
                        "type": "string"
                    },
                    "type": {
                        "$ref": "#/components/schemas/PatternType"
                    },
                    "origin": {
                        "$ref": "#/components/schemas/Geometry"
                    },
                    "infillId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "geometry": {
                        "$ref": "#/components/schemas/Geometry"
                    },
                    "numberOfSwaths": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "isRetired": {
                        "type": "boolean"
                    },
                    "updatedUtc": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "additionalProperties": false
            },
            "UpsertImplementRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "maxLength": 50,
                        "minLength": 0,
                        "type": "string",
                        "nullable": true
                    },
                    "operationTypeId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "operationSubTypeId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "equipmentGroupId": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "unitCost": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "UpsertLandmark": {
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "fieldId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "maxLength": 50,
                        "minLength": 0,
                        "pattern": "^[^/\\\\:*<>|.\"]+$",
                        "type": "string"
                    },
                    "geometry": {
                        "$ref": "#/components/schemas/Geometry"
                    },
                    "isRetired": {
                        "type": "boolean"
                    },
                    "updatedUtc": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "isProductive": {
                        "type": "boolean",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "UpsertManagementZoneDetailRequest": {
                "type": "object",
                "properties": {
                    "zoneName": {
                        "type": "string",
                        "nullable": true
                    },
                    "zoneCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "color": {
                        "type": "string",
                        "nullable": true
                    },
                    "geometry": {
                        "$ref": "#/components/schemas/Geometry"
                    }
                },
                "additionalProperties": false
            },
            "UpsertOperationSubTypeRequest": {
                "type": "object",
                "properties": {
                    "operationTypeId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "maxLength": 50,
                        "minLength": 0,
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "UpsertVehicle": {
                "required": [
                    "manufacturerId",
                    "name",
                    "vehicleTypeId"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "maxLength": 50,
                        "pattern": "^[^/\\\\:*<>|.\"]+$",
                        "type": "string"
                    },
                    "manufacturerId": {
                        "pattern": "^[^/\\\\:*<>|.\"]+$",
                        "type": "string"
                    },
                    "vehicleTypeId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "equipmentGroupId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "unitCost": {
                        "type": "number",
                        "format": "double"
                    }
                },
                "additionalProperties": false
            },
            "Vehicle": {
                "type": "object",
                "properties": {
                    "links": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Link"
                        },
                        "nullable": true
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "manufacturerId": {
                        "type": "string",
                        "nullable": true
                    },
                    "manufacturer": {
                        "type": "string",
                        "nullable": true
                    },
                    "vehicleTypeId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "vehicleType": {
                        "type": "string",
                        "nullable": true
                    },
                    "equipmentGroupId": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "equipmentGroup": {
                        "type": "string",
                        "nullable": true
                    },
                    "unitCost": {
                        "type": "number",
                        "format": "double"
                    },
                    "isRetired": {
                        "type": "boolean"
                    }
                },
                "additionalProperties": false
            },
            "VehicleType": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            }
        }
    }
}